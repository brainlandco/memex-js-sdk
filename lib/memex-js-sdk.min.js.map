{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///memex-js-sdk.min.js","webpack:///webpack/bootstrap cafab3fa64dbad7da256","webpack:///./src/Exports.js","webpack:///./src/Spaces.js","webpack:///./~/whatwg-fetch/fetch.js","webpack:///./src/Auth.js","webpack:///./src/data/Media.js","webpack:///./src/data/Types.js","webpack:///./~/base-64/base64.js","webpack:///(webpack)/buildin/module.js","webpack:///./~/utf8/utf8.js","webpack:///./src/data/User.js","webpack:///./src/data/Space.js","webpack:///./src/data/SpaceVisit.js","webpack:///./src/data/Link.js","webpack:///./src/data/App.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Spaces","_User","_User2","_Media","_Media2","_Space","_Space2","_SpaceVisit","_SpaceVisit2","_Link","_Link2","_App","_App2","_Types","Memex","sharedClient","Spaces","entityStates","environmentTypes","mediaTypes","spaceTypes","mediaDataStates","appPlatforms","Media","Space","SpaceVisit","Link","App","User","_classCallCheck","instance","Constructor","TypeError","undefined","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","_Auth","methods","GET","POST","_configuration","appToken","environment","production","_setEnvironment","console","error","token","_auth","Auth","_APIURL","stage","local","_isConfigured","isAuthorized","email","password","completion","loginWithCredentials","onboardingToken","loginWithOnboardingToken","deauthorize","media","body","toJSON","_perform","json","success","fromJSON","mediaMUID","tag","autodump","space","caption","color","spaceType","collection","representations","createSpace","spaceProcessingModes","sync","imageURL","dataDownloadURL","dataState","dataValid","mediaType","source","image","url","setEmbedDataFromString","reference","webPage","text","process","spaceMUID","visits","spaces","map","visit","muids","space_MUIDs","link","path","query","includeTarget","links","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","item","push","err","app","newApp","appID","apps","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","user","newUser","userID","oldPassword","newPassword","old_password","new_password","method","headers","Content-Type","X-App-Token","userToken","options","JSON","stringify","host","resultQuery","keys","queryString","reduce","array","encodeURIComponent","join","fetch","then","response","status","data","self","normalizeName","name","String","test","toLowerCase","normalizeValue","iteratorFor","items","shift","support","iterable","Headers","forEach","append","Array","isArray","header","getOwnPropertyNames","consumed","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","fromCharCode","bufferClone","slice","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","toString","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","Error","get","type","rejected","decode","parse","normalizeMethod","upcased","toUpperCase","indexOf","Request","input","credentials","mode","referrer","form","trim","split","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","ok","statusText","e","viewClasses","DataView","isView","oldValue","has","hasOwnProperty","callback","thisArg","values","entries","clone","redirectStatuses","redirect","RangeError","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","tokenKey","_host","_loadFromStorage","localStorage","getItem","setItem","removeItem","_storeIntoStorage","identity","secret","login","onboarding_token","_this","_base","_base2","_utf","_utf2","preview","summary","waitingForNewUploadURL","readyForDataUpload","state","visible","base64","binaryString","window","atob","charCodeAt","embededData","index","binary","len","btoa","encoded","base64EmbedData","MUID","muid","created_at","createdAt","Date","updated_at","updatedAt","ownerID","owner_id","metadata","data_state","embeded_data","setEmbedDataFromBase64","data_download_url","dataUploadURL","data_upload_url","representedSpaceMUID","represented_space_muid","toISOString","deleted","__WEBPACK_AMD_DEFINE_RESULT__","global","freeExports","freeGlobal","InvalidCharacterError","message","TABLE","REGEX_SPACE_CHARACTERS","bitStorage","bitCounter","output","position","charAt","encode","a","b","padding","version","webpackPolyfill","deprecate","paths","children","ucs2decode","string","extra","counter","ucs2encode","stringFromCharCode","checkScalarValue","codePoint","createByte","encodeCodePoint","symbol","utf8encode","codePoints","byteString","readContinuationByte","byteIndex","byteCount","continuationByte","byteArray","decodeSymbol","byte1","byte2","byte3","byte4","utf8decode","tmp","utf8","ID","fullname","avatar","originSpaceMUID","origin_space_muid","hasPassword","has_password","advanced","avatar_muid","origin","no","async","unread","visited_at","visitedAt","type_identifier","tag_label","tag_color","order","target_space_muid","target_space","appStates","new","requested","approved","blocked","rest","swift","javaScript","golang","description","webpage","platform"],"mappings":"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","file":"memex-js-sdk.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"memex-js-sdk\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"memex-js-sdk\"] = factory();\n\telse\n\t\troot[\"memex-js-sdk\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"memex-js-sdk\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"memex-js-sdk\"] = factory();\n\telse\n\t\troot[\"memex-js-sdk\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _Spaces = __webpack_require__(1);\n\t\n\tvar _User = __webpack_require__(9);\n\t\n\tvar _User2 = _interopRequireDefault(_User);\n\t\n\tvar _Media = __webpack_require__(4);\n\t\n\tvar _Media2 = _interopRequireDefault(_Media);\n\t\n\tvar _Space = __webpack_require__(10);\n\t\n\tvar _Space2 = _interopRequireDefault(_Space);\n\t\n\tvar _SpaceVisit = __webpack_require__(11);\n\t\n\tvar _SpaceVisit2 = _interopRequireDefault(_SpaceVisit);\n\t\n\tvar _Link = __webpack_require__(12);\n\t\n\tvar _Link2 = _interopRequireDefault(_Link);\n\t\n\tvar _App = __webpack_require__(13);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _Types = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar Memex = {\n\t  /** Shared instance of Spaces */\n\t  sharedClient: new _Spaces.Spaces(),\n\t  entityStates: _Types.entityStates,\n\t  environmentTypes: _Types.environmentTypes,\n\t  mediaTypes: _Media.mediaTypes,\n\t  spaceTypes: _Space.spaceTypes,\n\t  mediaDataStates: _Media.mediaDataStates,\n\t  appPlatforms: _App.appPlatforms,\n\t  Media: _Media2.default,\n\t  Space: _Space2.default,\n\t  SpaceVisit: _SpaceVisit2.default,\n\t  Link: _Link2.default,\n\t  App: _App2.default,\n\t  User: _User2.default\n\t};\n\t\n\texports.default = Memex;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Spaces = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(2);\n\t\n\tvar _Auth = __webpack_require__(3);\n\t\n\tvar _Media = __webpack_require__(4);\n\t\n\tvar _Media2 = _interopRequireDefault(_Media);\n\t\n\tvar _User = __webpack_require__(9);\n\t\n\tvar _User2 = _interopRequireDefault(_User);\n\t\n\tvar _Space = __webpack_require__(10);\n\t\n\tvar _Space2 = _interopRequireDefault(_Space);\n\t\n\tvar _SpaceVisit = __webpack_require__(11);\n\t\n\tvar _SpaceVisit2 = _interopRequireDefault(_SpaceVisit);\n\t\n\tvar _Link = __webpack_require__(12);\n\t\n\tvar _Link2 = _interopRequireDefault(_Link);\n\t\n\tvar _App = __webpack_require__(13);\n\t\n\tvar _App2 = _interopRequireDefault(_App);\n\t\n\tvar _Types = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar methods = {\n\t  GET: 'GET',\n\t  POST: 'POST'\n\t};\n\t\n\tvar Spaces = exports.Spaces = function () {\n\t  function Spaces() {\n\t    _classCallCheck(this, Spaces);\n\t\n\t    this._configuration = {\n\t      appToken: \"\",\n\t      environment: _Types.environmentTypes.production\n\t    };\n\t    this._setEnvironment(_Types.environmentTypes.production);\n\t  }\n\t\n\t  _createClass(Spaces, [{\n\t    key: '_isConfigured',\n\t    value: function _isConfigured() {\n\t      if (this._configuration.appToken === \"\") {\n\t        console.error(\"Missing Memex configuration, call Memex.client.setAppToken('<Your app token>')\");\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Sets app API token\n\t     *\n\t     * @param string token: App's unique API token\n\t     */\n\t\n\t  }, {\n\t    key: 'setAppToken',\n\t    value: function setAppToken(token) {\n\t      this._configuration.appToken = token;\n\t      this._auth.appToken = token;\n\t    }\n\t  }, {\n\t    key: '_setEnvironment',\n\t    value: function _setEnvironment(environment) {\n\t      this._configuration.environment = environment;\n\t      this._auth = new _Auth.Auth(this._APIURL(environment));\n\t      this._auth.appToken = this._configuration.appToken;\n\t    }\n\t  }, {\n\t    key: '_APIURL',\n\t    value: function _APIURL(environment) {\n\t      switch (environment) {\n\t        case _Types.environmentTypes.production:\n\t          return 'https://mmx-spaces-api-prod.herokuapp.com';\n\t        case _Types.environmentTypes.stage:\n\t          return 'https://mmx-spaces-api-stage.herokuapp.com';\n\t        case _Types.environmentTypes.local:\n\t          return 'http://localhost:5000';\n\t        default:\n\t          console.error('Unknown environment');\n\t          return '';\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Checks if user is logged in\n\t     *\n\t     * @returns bool: Returns flag that tells if user is authenticated\n\t     */\n\t\n\t  }, {\n\t    key: 'isLoggedIn',\n\t    value: function isLoggedIn() {\n\t      if (!this._isConfigured()) {\n\t        return false;\n\t      }\n\t      return this._auth.isAuthorized();\n\t    }\n\t\n\t    /**\n\t     * Login user using standard email/password credentials\n\t     *\n\t     * @param string email: Users unique email\n\t     * @param string password: Users secret password\n\t     * @param Object completion: Completion function that returns user token andd success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'loginWithCredentials',\n\t    value: function loginWithCredentials(email, password, completion) {\n\t      if (!this._isConfigured()) {\n\t        return;\n\t      }\n\t      this._auth.loginWithCredentials(email, password, completion);\n\t    }\n\t\n\t    /**\n\t     * Login user using onboarding token\n\t     *\n\t     * @param string onboardingToken: Onboarding token\n\t     * @param Object completion: Completion function that returns user token andd success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'loginWithOnboardingToken',\n\t    value: function loginWithOnboardingToken(onboardingToken, completion) {\n\t      if (!this._isConfigured()) {\n\t        return;\n\t      }\n\t      this._auth.loginWithOnboardingToken(onboardingToken, completion);\n\t    }\n\t\n\t    /**\n\t     * Logout user. Removes user token from local storage.\n\t     */\n\t\n\t  }, {\n\t    key: 'logout',\n\t    value: function logout() {\n\t      if (!this._isConfigured()) {\n\t        return;\n\t      }\n\t      this._auth.deauthorize();\n\t    }\n\t\n\t    //////////////////////////////////////////////////////////////////////\n\t    // Media Handler\n\t    //////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * New media creation. If there is some data that needs to be uploaded put it to dataUploadURL and call markMediaAsUploaded.\n\t     *\n\t     * @param Media media: New media\n\t     * @param Object completion: Completion handler that will get created media and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createMedia',\n\t    value: function createMedia(media, completion) {\n\t      var body = {\n\t        media: media.toJSON()\n\t      };\n\t      this._perform(methods.POST, 'media', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var media = new _Media2.default();\n\t        media.fromJSON(json.media);\n\t        completion(media, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Returns media object. It can be used when dataDownloadURL is expired and new is needed.\n\t     *\n\t     * @param string mediaMUID: Requested media MUID\n\t     * @param Object completion: Completion handler that will get media and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'getMedia',\n\t    value: function getMedia(mediaMUID, completion) {\n\t      this._perform(methods.GET, 'media/' + mediaMUID, null, null, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var media = new _Media2.default();\n\t        media.fromJSON(json.media);\n\t        completion(media, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Marks media data as uploaded. It means that data was uploaded to dataUploadURL and dataState now can change to valid state.\n\t     *\n\t     * @param string mediaMUID: Requested media MUID\n\t     * @param Object completion: Completion handler\n\t     */\n\t\n\t  }, {\n\t    key: 'markMediaAsUploaded',\n\t    value: function markMediaAsUploaded(mediaMUID, completion) {\n\t      this._perform(methods.POST, 'media/' + mediaMUID + '/mark-as-uploaded', null, null, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(false);\n\t          return;\n\t        }\n\t        completion(true);\n\t      });\n\t    }\n\t\n\t    //////////////////////////////////////////////////////////////////////\n\t    // Spaces Handler\n\t    //////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * Creates collection space\n\t     *\n\t     * @param string tag: Caption of new space\n\t     * @param bool autodump: True if new space should be autodumped\n\t     * @param Object completion: Completion handler that will get created space and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createCollectionSpace',\n\t    value: function createCollectionSpace(tag, autodump, completion) {\n\t      var space = new _Space2.default();\n\t      space.caption = tag;\n\t      space.color = null;\n\t      space.spaceType = _Space.spaceTypes.collection;\n\t      space.representations = [];\n\t      this.createSpace(space, _Space.spaceProcessingModes.sync, autodump, completion);\n\t    }\n\t\n\t    /**\n\t     * Creates image space from URL\n\t     *\n\t     * @param string url: Source URL of image\n\t     * @param bool autodump: True if new space should be autodumped\n\t     * @param Object completion: Completion handler that will get created space and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createImageSpace',\n\t    value: function createImageSpace(imageURL, autodump, completion) {\n\t      var media = new _Media2.default();\n\t      media.dataDownloadURL = imageURL;\n\t      media.dataState = _Media.mediaDataStates.dataValid;\n\t      media.mediaType = _Media.mediaTypes.source;\n\t\n\t      var space = new _Space2.default();\n\t      space.spaceType = _Space.spaceTypes.image;\n\t      space.representations = [media];\n\t\n\t      this.createSpace(space, _Space.spaceProcessingModes.sync, autodump, completion);\n\t    }\n\t\n\t    /**\n\t     * Creates webpage space from URL\n\t     *\n\t     * @param string url: URL of webpage\n\t     * @param bool autodump: True if new space should be autodumped\n\t     * @param Object completion: Completion handler that will get created space and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createWebPageSpace',\n\t    value: function createWebPageSpace(url, autodump, completion) {\n\t      var media = new _Media2.default();\n\t      media.setEmbedDataFromString(url);\n\t      media.dataState = _Media.mediaDataStates.dataValid;\n\t      media.mediaType = _Media.mediaTypes.reference;\n\t\n\t      var space = new _Space2.default();\n\t      space.spaceType = _Space.spaceTypes.webPage;\n\t      space.representations = [media];\n\t\n\t      this.createSpace(space, _Space.spaceProcessingModes.sync, autodump, completion);\n\t    }\n\t\n\t    /**\n\t     * Creates text space\n\t     *\n\t     * @param string text: Content text\n\t     * @param bool autodump: True if new space should be autodumped\n\t     * @param Object completion: Completion handler that will get created space and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createTextSpace',\n\t    value: function createTextSpace(text, autodump, completion) {\n\t      var media = new _Media2.default();\n\t      media.setEmbedDataFromString(text);\n\t      media.dataState = _Media.mediaDataStates.dataValid;\n\t      media.mediaType = _Media.mediaTypes.source;\n\t\n\t      var space = new _Space2.default();\n\t      space.spaceType = _Space.spaceTypes.text;\n\t      space.representations = [media];\n\t\n\t      this.createSpace(space, _Space.spaceProcessingModes.sync, autodump, completion);\n\t    }\n\t\n\t    /**\n\t     * Creates space\n\t     *\n\t     * @param Space space: New space\n\t     * @param SpaceProcessingMode process: Defines processing mode\n\t     * @param bool autodump: True if new space should be autodumped\n\t     * @param Object completion: Completion handler that will get created space and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createSpace',\n\t    value: function createSpace(space, process, autodump, completion) {\n\t      var body = {\n\t        space: space.toJSON(),\n\t        process: process,\n\t        autodump: autodump\n\t      };\n\t      this._perform(methods.POST, 'spaces', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var space = new _Space2.default();\n\t        space.fromJSON(json.space);\n\t        completion(space, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get space\n\t     *\n\t     * @param string spaceMUID: Requested space MUID (or you can use keyword 'origin' for fetching users's origin space)\n\t     * @param Object completion: Completion handler that will get space and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'getSpace',\n\t    value: function getSpace(spaceMUID, completion) {\n\t      this._perform(methods.GET, 'spaces/' + spaceMUID, null, null, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var space = new _Space2.default();\n\t        space.fromJSON(json.space);\n\t        completion(space, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Log space visits\n\t     *\n\t     * @param string visits: Array of space visits. Can contain multiple spaces with same MUID.\n\t     * @param Object completion: Completion handler\n\t     */\n\t\n\t  }, {\n\t    key: 'logSpaceVisits',\n\t    value: function logSpaceVisits(visits, completion) {\n\t      var body = {\n\t        spaces: visits.map(function (visit) {\n\t          return visit.toJSON();\n\t        })\n\t      };\n\t      this._perform(methods.POST, 'spaces/log-visits', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(false);\n\t          return;\n\t        }\n\t        completion(true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Returns abstraction (caption) for set of spaces\n\t     *\n\t     * @param string muids: Set of space MUIDs for that will be caption generated\n\t     * @param Object completion: Completion handler\n\t     */\n\t\n\t  }, {\n\t    key: 'getSpacesAbstract',\n\t    value: function getSpacesAbstract(muids, completion) {\n\t      var body = {\n\t        space_MUIDs: muids\n\t      };\n\t      this._perform(methods.POST, 'spaces/abstract', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        completion(json.caption, true);\n\t      });\n\t    }\n\t\n\t    //////////////////////////////////////////////////////////////////////\n\t    // Links Handler\n\t    //////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * NNew link creation.\n\t     *\n\t     * @param Link link: New link\n\t     * @param Object completion: Completion handler that will get created media and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createMedia',\n\t    value: function createMedia(link, completion) {\n\t      var body = {\n\t        link: link.toJSON()\n\t      };\n\t      this._perform(methods.POST, 'links', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var link = new _Link2.default();\n\t        link.fromJSON(json.link);\n\t        completion(link, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get space links\n\t     *\n\t     * @param string spaceMUID: Requested space MUID (or you can use keyword 'origin' for fetching users's origin space)\n\t     * @param Object completion: Completion handler that will get array of links and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'getSpaceLinks',\n\t    value: function getSpaceLinks(spaceMUID, completion) {\n\t      var path = 'spaces/' + spaceMUID + '/links';\n\t      var query = {\n\t        includeTarget: true\n\t      };\n\t      this._perform(methods.GET, path, query, null, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var links = [];\n\t        var _iteratorNormalCompletion = true;\n\t        var _didIteratorError = false;\n\t        var _iteratorError = undefined;\n\t\n\t        try {\n\t          for (var _iterator = json.links[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t            var item = _step.value;\n\t\n\t            var link = new _Link2.default();\n\t            link.fromJSON(item);\n\t            links.push(link);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError = true;\n\t          _iteratorError = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion && _iterator.return) {\n\t              _iterator.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError) {\n\t              throw _iteratorError;\n\t            }\n\t          }\n\t        }\n\t\n\t        completion(links, true);\n\t      });\n\t    }\n\t\n\t    //////////////////////////////////////////////////////////////////////\n\t    // App Handler\n\t    //////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * New app creation\n\t     *\n\t     * @param App app: New app object\n\t     * @param Object completion: Completion handler that will get created app and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createApp',\n\t    value: function createApp(app, completion) {\n\t      var body = {\n\t        app: app.toJSON()\n\t      };\n\t      this._perform(methods.POST, 'apps', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var newApp = new _App2.default();\n\t        newApp.fromJSON(json.app);\n\t        completion(newApp, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get app detail\n\t     *\n\t     * @param number id: Fetched App ID\n\t     * @param Object completion: Completion handler that will get app and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'getApp',\n\t    value: function getApp(id, completion) {\n\t      this._perform(methods.GET, 'apps/' + id, null, null, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var newApp = new _App2.default();\n\t        newApp.fromJSON(json.app);\n\t        completion(newApp, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Update app\n\t     *\n\t     * @param App app: Updated app object\n\t     * @param Object completion: Completion handler that will get updated app and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'updateApp',\n\t    value: function updateApp(app, completion) {\n\t      if (app.id === null) {\n\t        console.error(\"Missing app id\");\n\t        completion(null, false);\n\t        return;\n\t      }\n\t      var body = {\n\t        app: app.toJSON()\n\t      };\n\t      this._perform(methods.POST, 'apps/' + app.id, null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var newApp = new _App2.default();\n\t        newApp.fromJSON(json.app);\n\t        completion(newApp, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Renew app token. Will generate new app token (all clients that uses old one will stop working!!)\n\t     *\n\t     * @param number appID: App ID\n\t     * @param Object completion: Completion handler that will get updated app and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'renewAppToken',\n\t    value: function renewAppToken(appID, completion) {\n\t      this._perform(methods.POST, 'apps/' + appID + \"/renew-token\", null, {}, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var newApp = new _App2.default();\n\t        newApp.fromJSON(json.app);\n\t        completion(newApp, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Get all users apps\n\t     *\n\t     * @param Object completion: Completion handler that will get array of all users apps and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'getApps',\n\t    value: function getApps(completion) {\n\t      var path = 'apps';\n\t      this._perform(methods.GET, path, {}, null, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var apps = [];\n\t        var _iteratorNormalCompletion2 = true;\n\t        var _didIteratorError2 = false;\n\t        var _iteratorError2 = undefined;\n\t\n\t        try {\n\t          for (var _iterator2 = json.apps[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n\t            var item = _step2.value;\n\t\n\t            var _app = new _App2.default();\n\t            _app.fromJSON(item);\n\t            apps.push(_app);\n\t          }\n\t        } catch (err) {\n\t          _didIteratorError2 = true;\n\t          _iteratorError2 = err;\n\t        } finally {\n\t          try {\n\t            if (!_iteratorNormalCompletion2 && _iterator2.return) {\n\t              _iterator2.return();\n\t            }\n\t          } finally {\n\t            if (_didIteratorError2) {\n\t              throw _iteratorError2;\n\t            }\n\t          }\n\t        }\n\t\n\t        completion(apps, true);\n\t      });\n\t    }\n\t\n\t    //////////////////////////////////////////////////////////////////////\n\t    // User Handler\n\t    //////////////////////////////////////////////////////////////////////\n\t\n\t    /**\n\t     * Creates new user. User object must contains password and valid email.\n\t     *\n\t     * @param User user: New user object\n\t     * @param string onboardingToken: Onboarding token (optional)\n\t     * @param Object completion: Completion handler that will return new user object and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'createUser',\n\t    value: function createUser(user, onboardingToken, completion) {\n\t      var body = {\n\t        user: user.toJSON(),\n\t        onboardingToken: onboardingToken\n\t      };\n\t      this._perform(methods.POST, 'users', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var newUser = new _User2.default();\n\t        newUser.fromJSON(json.user);\n\t        completion(newUser, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Fetch user detail.\n\t     *\n\t     * @param number userID: Optional user ID. If null then you will get authenticated user detail.\n\t     * @param Object completion: Completion handler that will return requested user object and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'getUser',\n\t    value: function getUser(userID, completion) {\n\t      this._perform(methods.GET, 'users/' + (userID == null ? 'self' : userID), null, null, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var newUser = new _User2.default();\n\t        newUser.fromJSON(json.user);\n\t        completion(newUser, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Update user. For password updates use setUserPassword function.\n\t     *\n\t     * @param User user: Updated user object\n\t     * @param Object completion: Completion handler that will return update user object and success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'updateUser',\n\t    value: function updateUser(user, completion) {\n\t      var body = {\n\t        user: user.toJSON()\n\t      };\n\t      this._perform(methods.POST, 'users/self', null, body, function (json, success) {\n\t        if (success === false || json == null) {\n\t          completion(null, false);\n\t          return;\n\t        }\n\t        var newUser = new _User2.default();\n\t        newUser.fromJSON(json.user);\n\t        completion(newUser, true);\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Sets user password.\n\t     *\n\t     * @param string oldPassword: Old user's password (if any exists - user was not authenticated by onboarding token)\n\t     * @param string newPassword: New password\n\t     * @param Object completion: Completion handler that will return only success flag\n\t     */\n\t\n\t  }, {\n\t    key: 'setUserPassword',\n\t    value: function setUserPassword(oldPassword, newPassword, completion) {\n\t      var body = {\n\t        old_password: oldPassword,\n\t        new_password: newPassword\n\t      };\n\t      this._perform(methods.POST, 'users/self/change-password', null, body, function (json, success) {\n\t        if (success === false) {\n\t          completion(false);\n\t          return;\n\t        }\n\t        completion(true);\n\t      });\n\t    }\n\t\n\t    //////////////////////////////////////////////////////////////////////\n\t    // Shared\n\t    //////////////////////////////////////////////////////////////////////\n\t\n\t  }, {\n\t    key: '_perform',\n\t    value: function _perform(method, path, query, body, completion) {\n\t      if (!this._isConfigured()) {\n\t        return;\n\t      }\n\t\n\t      var headers = {\n\t        'Content-Type': 'application/json',\n\t        'X-App-Token': this._configuration.appToken\n\t      };\n\t      if (this._auth.userToken != null) {\n\t        headers['X-User-Token'] = this._auth.userToken;\n\t      }\n\t      var options = {\n\t        method: method,\n\t        body: body != null ? JSON.stringify(body) : null,\n\t        headers: headers\n\t      };\n\t\n\t      var host = this._APIURL(this._configuration.environment);\n\t      var url = host + '/' + path;\n\t      var resultQuery = query;\n\t      if (resultQuery != null) {\n\t        var keys = Object.keys(resultQuery);\n\t        var queryString = keys.reduce(function (array, key) {\n\t          if (resultQuery == null) {\n\t            return array;\n\t          }\n\t          var value = resultQuery[key];\n\t          array.push(key + '=' + encodeURIComponent(value));\n\t          return array;\n\t        }, []).join('&');\n\t        url += '?' + queryString;\n\t      }\n\t      fetch(url, options).then(function (response) {\n\t        if (response.status < 200 || response.status >= 300) {\n\t          throw response;\n\t        } else {\n\t          return response;\n\t        }\n\t      }).then(function (data) {\n\t        return data.json();\n\t      }).then(function (response) {\n\t        completion(response, true);\n\t      }, function (error) {\n\t        completion(null, false);\n\t      });\n\t    }\n\t  }]);\n\n\t  return Spaces;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t(function(self) {\n\t  'use strict';\n\t\n\t  if (self.fetch) {\n\t    return\n\t  }\n\t\n\t  var support = {\n\t    searchParams: 'URLSearchParams' in self,\n\t    iterable: 'Symbol' in self && 'iterator' in Symbol,\n\t    blob: 'FileReader' in self && 'Blob' in self && (function() {\n\t      try {\n\t        new Blob()\n\t        return true\n\t      } catch(e) {\n\t        return false\n\t      }\n\t    })(),\n\t    formData: 'FormData' in self,\n\t    arrayBuffer: 'ArrayBuffer' in self\n\t  }\n\t\n\t  if (support.arrayBuffer) {\n\t    var viewClasses = [\n\t      '[object Int8Array]',\n\t      '[object Uint8Array]',\n\t      '[object Uint8ClampedArray]',\n\t      '[object Int16Array]',\n\t      '[object Uint16Array]',\n\t      '[object Int32Array]',\n\t      '[object Uint32Array]',\n\t      '[object Float32Array]',\n\t      '[object Float64Array]'\n\t    ]\n\t\n\t    var isDataView = function(obj) {\n\t      return obj && DataView.prototype.isPrototypeOf(obj)\n\t    }\n\t\n\t    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n\t      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n\t    }\n\t  }\n\t\n\t  function normalizeName(name) {\n\t    if (typeof name !== 'string') {\n\t      name = String(name)\n\t    }\n\t    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n\t      throw new TypeError('Invalid character in header field name')\n\t    }\n\t    return name.toLowerCase()\n\t  }\n\t\n\t  function normalizeValue(value) {\n\t    if (typeof value !== 'string') {\n\t      value = String(value)\n\t    }\n\t    return value\n\t  }\n\t\n\t  // Build a destructive iterator for the value list\n\t  function iteratorFor(items) {\n\t    var iterator = {\n\t      next: function() {\n\t        var value = items.shift()\n\t        return {done: value === undefined, value: value}\n\t      }\n\t    }\n\t\n\t    if (support.iterable) {\n\t      iterator[Symbol.iterator] = function() {\n\t        return iterator\n\t      }\n\t    }\n\t\n\t    return iterator\n\t  }\n\t\n\t  function Headers(headers) {\n\t    this.map = {}\n\t\n\t    if (headers instanceof Headers) {\n\t      headers.forEach(function(value, name) {\n\t        this.append(name, value)\n\t      }, this)\n\t    } else if (Array.isArray(headers)) {\n\t      headers.forEach(function(header) {\n\t        this.append(header[0], header[1])\n\t      }, this)\n\t    } else if (headers) {\n\t      Object.getOwnPropertyNames(headers).forEach(function(name) {\n\t        this.append(name, headers[name])\n\t      }, this)\n\t    }\n\t  }\n\t\n\t  Headers.prototype.append = function(name, value) {\n\t    name = normalizeName(name)\n\t    value = normalizeValue(value)\n\t    var oldValue = this.map[name]\n\t    this.map[name] = oldValue ? oldValue+','+value : value\n\t  }\n\t\n\t  Headers.prototype['delete'] = function(name) {\n\t    delete this.map[normalizeName(name)]\n\t  }\n\t\n\t  Headers.prototype.get = function(name) {\n\t    name = normalizeName(name)\n\t    return this.has(name) ? this.map[name] : null\n\t  }\n\t\n\t  Headers.prototype.has = function(name) {\n\t    return this.map.hasOwnProperty(normalizeName(name))\n\t  }\n\t\n\t  Headers.prototype.set = function(name, value) {\n\t    this.map[normalizeName(name)] = normalizeValue(value)\n\t  }\n\t\n\t  Headers.prototype.forEach = function(callback, thisArg) {\n\t    for (var name in this.map) {\n\t      if (this.map.hasOwnProperty(name)) {\n\t        callback.call(thisArg, this.map[name], name, this)\n\t      }\n\t    }\n\t  }\n\t\n\t  Headers.prototype.keys = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push(name) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.values = function() {\n\t    var items = []\n\t    this.forEach(function(value) { items.push(value) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  Headers.prototype.entries = function() {\n\t    var items = []\n\t    this.forEach(function(value, name) { items.push([name, value]) })\n\t    return iteratorFor(items)\n\t  }\n\t\n\t  if (support.iterable) {\n\t    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n\t  }\n\t\n\t  function consumed(body) {\n\t    if (body.bodyUsed) {\n\t      return Promise.reject(new TypeError('Already read'))\n\t    }\n\t    body.bodyUsed = true\n\t  }\n\t\n\t  function fileReaderReady(reader) {\n\t    return new Promise(function(resolve, reject) {\n\t      reader.onload = function() {\n\t        resolve(reader.result)\n\t      }\n\t      reader.onerror = function() {\n\t        reject(reader.error)\n\t      }\n\t    })\n\t  }\n\t\n\t  function readBlobAsArrayBuffer(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsArrayBuffer(blob)\n\t    return promise\n\t  }\n\t\n\t  function readBlobAsText(blob) {\n\t    var reader = new FileReader()\n\t    var promise = fileReaderReady(reader)\n\t    reader.readAsText(blob)\n\t    return promise\n\t  }\n\t\n\t  function readArrayBufferAsText(buf) {\n\t    var view = new Uint8Array(buf)\n\t    var chars = new Array(view.length)\n\t\n\t    for (var i = 0; i < view.length; i++) {\n\t      chars[i] = String.fromCharCode(view[i])\n\t    }\n\t    return chars.join('')\n\t  }\n\t\n\t  function bufferClone(buf) {\n\t    if (buf.slice) {\n\t      return buf.slice(0)\n\t    } else {\n\t      var view = new Uint8Array(buf.byteLength)\n\t      view.set(new Uint8Array(buf))\n\t      return view.buffer\n\t    }\n\t  }\n\t\n\t  function Body() {\n\t    this.bodyUsed = false\n\t\n\t    this._initBody = function(body) {\n\t      this._bodyInit = body\n\t      if (!body) {\n\t        this._bodyText = ''\n\t      } else if (typeof body === 'string') {\n\t        this._bodyText = body\n\t      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n\t        this._bodyBlob = body\n\t      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n\t        this._bodyFormData = body\n\t      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t        this._bodyText = body.toString()\n\t      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n\t        this._bodyArrayBuffer = bufferClone(body.buffer)\n\t        // IE 10-11 can't handle a DataView body.\n\t        this._bodyInit = new Blob([this._bodyArrayBuffer])\n\t      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n\t        this._bodyArrayBuffer = bufferClone(body)\n\t      } else {\n\t        throw new Error('unsupported BodyInit type')\n\t      }\n\t\n\t      if (!this.headers.get('content-type')) {\n\t        if (typeof body === 'string') {\n\t          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n\t        } else if (this._bodyBlob && this._bodyBlob.type) {\n\t          this.headers.set('content-type', this._bodyBlob.type)\n\t        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n\t          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n\t        }\n\t      }\n\t    }\n\t\n\t    if (support.blob) {\n\t      this.blob = function() {\n\t        var rejected = consumed(this)\n\t        if (rejected) {\n\t          return rejected\n\t        }\n\t\n\t        if (this._bodyBlob) {\n\t          return Promise.resolve(this._bodyBlob)\n\t        } else if (this._bodyArrayBuffer) {\n\t          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n\t        } else if (this._bodyFormData) {\n\t          throw new Error('could not read FormData body as blob')\n\t        } else {\n\t          return Promise.resolve(new Blob([this._bodyText]))\n\t        }\n\t      }\n\t\n\t      this.arrayBuffer = function() {\n\t        if (this._bodyArrayBuffer) {\n\t          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n\t        } else {\n\t          return this.blob().then(readBlobAsArrayBuffer)\n\t        }\n\t      }\n\t    }\n\t\n\t    this.text = function() {\n\t      var rejected = consumed(this)\n\t      if (rejected) {\n\t        return rejected\n\t      }\n\t\n\t      if (this._bodyBlob) {\n\t        return readBlobAsText(this._bodyBlob)\n\t      } else if (this._bodyArrayBuffer) {\n\t        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n\t      } else if (this._bodyFormData) {\n\t        throw new Error('could not read FormData body as text')\n\t      } else {\n\t        return Promise.resolve(this._bodyText)\n\t      }\n\t    }\n\t\n\t    if (support.formData) {\n\t      this.formData = function() {\n\t        return this.text().then(decode)\n\t      }\n\t    }\n\t\n\t    this.json = function() {\n\t      return this.text().then(JSON.parse)\n\t    }\n\t\n\t    return this\n\t  }\n\t\n\t  // HTTP methods whose capitalization should be normalized\n\t  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\t\n\t  function normalizeMethod(method) {\n\t    var upcased = method.toUpperCase()\n\t    return (methods.indexOf(upcased) > -1) ? upcased : method\n\t  }\n\t\n\t  function Request(input, options) {\n\t    options = options || {}\n\t    var body = options.body\n\t\n\t    if (input instanceof Request) {\n\t      if (input.bodyUsed) {\n\t        throw new TypeError('Already read')\n\t      }\n\t      this.url = input.url\n\t      this.credentials = input.credentials\n\t      if (!options.headers) {\n\t        this.headers = new Headers(input.headers)\n\t      }\n\t      this.method = input.method\n\t      this.mode = input.mode\n\t      if (!body && input._bodyInit != null) {\n\t        body = input._bodyInit\n\t        input.bodyUsed = true\n\t      }\n\t    } else {\n\t      this.url = String(input)\n\t    }\n\t\n\t    this.credentials = options.credentials || this.credentials || 'omit'\n\t    if (options.headers || !this.headers) {\n\t      this.headers = new Headers(options.headers)\n\t    }\n\t    this.method = normalizeMethod(options.method || this.method || 'GET')\n\t    this.mode = options.mode || this.mode || null\n\t    this.referrer = null\n\t\n\t    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n\t      throw new TypeError('Body not allowed for GET or HEAD requests')\n\t    }\n\t    this._initBody(body)\n\t  }\n\t\n\t  Request.prototype.clone = function() {\n\t    return new Request(this, { body: this._bodyInit })\n\t  }\n\t\n\t  function decode(body) {\n\t    var form = new FormData()\n\t    body.trim().split('&').forEach(function(bytes) {\n\t      if (bytes) {\n\t        var split = bytes.split('=')\n\t        var name = split.shift().replace(/\\+/g, ' ')\n\t        var value = split.join('=').replace(/\\+/g, ' ')\n\t        form.append(decodeURIComponent(name), decodeURIComponent(value))\n\t      }\n\t    })\n\t    return form\n\t  }\n\t\n\t  function parseHeaders(rawHeaders) {\n\t    var headers = new Headers()\n\t    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n\t      var parts = line.split(':')\n\t      var key = parts.shift().trim()\n\t      if (key) {\n\t        var value = parts.join(':').trim()\n\t        headers.append(key, value)\n\t      }\n\t    })\n\t    return headers\n\t  }\n\t\n\t  Body.call(Request.prototype)\n\t\n\t  function Response(bodyInit, options) {\n\t    if (!options) {\n\t      options = {}\n\t    }\n\t\n\t    this.type = 'default'\n\t    this.status = 'status' in options ? options.status : 200\n\t    this.ok = this.status >= 200 && this.status < 300\n\t    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n\t    this.headers = new Headers(options.headers)\n\t    this.url = options.url || ''\n\t    this._initBody(bodyInit)\n\t  }\n\t\n\t  Body.call(Response.prototype)\n\t\n\t  Response.prototype.clone = function() {\n\t    return new Response(this._bodyInit, {\n\t      status: this.status,\n\t      statusText: this.statusText,\n\t      headers: new Headers(this.headers),\n\t      url: this.url\n\t    })\n\t  }\n\t\n\t  Response.error = function() {\n\t    var response = new Response(null, {status: 0, statusText: ''})\n\t    response.type = 'error'\n\t    return response\n\t  }\n\t\n\t  var redirectStatuses = [301, 302, 303, 307, 308]\n\t\n\t  Response.redirect = function(url, status) {\n\t    if (redirectStatuses.indexOf(status) === -1) {\n\t      throw new RangeError('Invalid status code')\n\t    }\n\t\n\t    return new Response(null, {status: status, headers: {location: url}})\n\t  }\n\t\n\t  self.Headers = Headers\n\t  self.Request = Request\n\t  self.Response = Response\n\t\n\t  self.fetch = function(input, init) {\n\t    return new Promise(function(resolve, reject) {\n\t      var request = new Request(input, init)\n\t      var xhr = new XMLHttpRequest()\n\t\n\t      xhr.onload = function() {\n\t        var options = {\n\t          status: xhr.status,\n\t          statusText: xhr.statusText,\n\t          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n\t        }\n\t        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n\t        var body = 'response' in xhr ? xhr.response : xhr.responseText\n\t        resolve(new Response(body, options))\n\t      }\n\t\n\t      xhr.onerror = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.ontimeout = function() {\n\t        reject(new TypeError('Network request failed'))\n\t      }\n\t\n\t      xhr.open(request.method, request.url, true)\n\t\n\t      if (request.credentials === 'include') {\n\t        xhr.withCredentials = true\n\t      }\n\t\n\t      if ('responseType' in xhr && support.blob) {\n\t        xhr.responseType = 'blob'\n\t      }\n\t\n\t      request.headers.forEach(function(value, name) {\n\t        xhr.setRequestHeader(name, value)\n\t      })\n\t\n\t      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n\t    })\n\t  }\n\t  self.fetch.polyfill = true\n\t})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.Auth = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\t__webpack_require__(2);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar tokenKey = 'token';\n\t\n\tvar Auth = exports.Auth = function () {\n\t  function Auth(host) {\n\t    _classCallCheck(this, Auth);\n\t\n\t    this._host = host;\n\t    this._loadFromStorage();\n\t  }\n\t\n\t  _createClass(Auth, [{\n\t    key: '_loadFromStorage',\n\t    value: function _loadFromStorage() {\n\t      this.userToken = localStorage.getItem(tokenKey);\n\t      if (this.userToken === 'null') {\n\t        this.userToken = null;\n\t      }\n\t    }\n\t  }, {\n\t    key: '_storeIntoStorage',\n\t    value: function _storeIntoStorage() {\n\t      if (this.userToken != null) {\n\t        localStorage.setItem(tokenKey, this.userToken);\n\t      } else {\n\t        localStorage.removeItem(tokenKey);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'isAuthorized',\n\t    value: function isAuthorized() {\n\t      return this.userToken != null;\n\t    }\n\t  }, {\n\t    key: 'deauthorize',\n\t    value: function deauthorize() {\n\t      this.userToken = null;\n\t      this._storeIntoStorage();\n\t    }\n\t  }, {\n\t    key: 'loginWithCredentials',\n\t    value: function loginWithCredentials(email, password, completion) {\n\t      var data = {\n\t        identity: {\n\t          email: email\n\t        },\n\t        secret: {\n\t          password: password\n\t        }\n\t      };\n\t      this.login(data, completion);\n\t    }\n\t  }, {\n\t    key: 'loginWithOnboardingToken',\n\t    value: function loginWithOnboardingToken(onboardingToken, completion) {\n\t      var data = {\n\t        secret: {\n\t          onboarding_token: onboardingToken\n\t        }\n\t      };\n\t      this.login(data, completion);\n\t    }\n\t  }, {\n\t    key: 'login',\n\t    value: function login(data, completion) {\n\t      var _this = this;\n\t\n\t      var options = {\n\t        method: 'POST',\n\t        body: JSON.stringify(data),\n\t        headers: {\n\t          'Content-Type': 'application/json',\n\t          'X-App-Token': this.appToken\n\t        }\n\t      };\n\t      var url = this._host + '/users/request-token';\n\t\n\t      fetch(url, options).then(function (response) {\n\t        if (response.status < 200 || response.status >= 300) {\n\t          throw response;\n\t        } else {\n\t          return response;\n\t        }\n\t      }).then(function (data) {\n\t        return data.json();\n\t      }).then(function (response) {\n\t        _this.userToken = response.token;\n\t        _this._storeIntoStorage();\n\t        completion(_this.userToken, true);\n\t      }, function () {\n\t        _this.userToken = null;\n\t        completion(null, false);\n\t      });\n\t    }\n\t  }]);\n\n\t  return Auth;\n\t}();\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.mediaDataStates = exports.mediaTypes = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Types = __webpack_require__(5);\n\t\n\tvar _base = __webpack_require__(6);\n\t\n\tvar _base2 = _interopRequireDefault(_base);\n\t\n\tvar _utf = __webpack_require__(8);\n\t\n\tvar _utf2 = _interopRequireDefault(_utf);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** Type of media */\n\tvar mediaTypes = exports.mediaTypes = {\n\t  /** Source of data (every other representation can be derived from it). */\n\t  source: 'source',\n\t  /** Reference is link to source */\n\t  reference: 'reference',\n\t  /** Preview is visual/graphical abstraction of source/reference */\n\t  preview: 'preview',\n\t  /** Summary is textual abstraction of source/reference */\n\t  summary: 'summary'\n\t};\n\t\n\t/** Media data upload state */\n\tvar mediaDataStates = exports.mediaDataStates = {\n\t  /** Client is waiting for server to generate signed dataUploadURL */\n\t  waitingForNewUploadURL: 0,\n\t  /** Data Upload URL is valid and client can upload data */\n\t  readyForDataUpload: 1,\n\t  /** Data is valid and can be downloaded/used */\n\t  dataValid: 2\n\t};\n\t\n\t/** Class represents media component of space */\n\t\n\tvar Media = function () {\n\t  /** Upload link for new data. After data is uploaded it is needed to call mark media as uploaded function. */\n\t\n\t  /** Embed media binary data (only if small enough, otherwise use dataDownloadURL and dataUploadURL) */\n\t\n\t  /** Type of media */\n\t\n\t  /** Owner user ID */\n\t\n\t  /** Timestamp of last update */\n\t\n\t\n\t  /** Unique media identifier */\n\t  function Media() {\n\t    _classCallCheck(this, Media);\n\t\n\t    this.state = _Types.entityStates.visible;\n\t  }\n\t\n\t  /**\n\t   * Sets embedData (binary format) from base64 format\n\t   *\n\t   * @param string base64: Base64 encoded data\n\t   */\n\t\n\t  /** If media represents any space then its MUID is present */\n\t\n\t  /** Download url for data (exclusive with embedData) */\n\t\n\t  /** Validity of media data */\n\t\n\t  /** JSON encodec dictionary of media metadata eg. size, encoding, etc. */\n\t\n\t  /** Visibility state */\n\t\n\t  /** Creation timestamp */\n\t\n\t\n\t  _createClass(Media, [{\n\t    key: 'setEmbedDataFromBase64',\n\t    value: function setEmbedDataFromBase64(base64) {\n\t      var binaryString = window.atob(base64);\n\t      var length = binaryString.length;\n\t      var bytes = new Uint8Array(length);\n\t      for (var i = 0; i < length; i++) {\n\t        bytes[i] = binaryString.charCodeAt(i);\n\t      }\n\t      this.embededData = bytes.buffer;\n\t    }\n\t\n\t    /**\n\t     * Sets embedData (binary format) from ANSCI ancoded text\n\t     *\n\t     * @param string value: ANSCII encoded data\n\t     */\n\t\n\t  }, {\n\t    key: 'setEmbedDataFromString',\n\t    value: function setEmbedDataFromString(value) {\n\t      var length = value.length;\n\t      var array = new Uint8Array(length);\n\t      for (var index = 0; index < length; index++) {\n\t        array[index] = value.charCodeAt(index);\n\t      }\n\t      this.embededData = array.buffer;\n\t    }\n\t\n\t    /**\n\t     * Converts emebedData into base64 encoded string\n\t     *\n\t     * @returns string Base64 encoded embedData\n\t     */\n\t\n\t  }, {\n\t    key: 'base64EmbedData',\n\t    value: function base64EmbedData() {\n\t      if (this.embededData == null) {\n\t        return null;\n\t      }\n\t      var binary = '';\n\t      var bytes = new Uint8Array(this.embededData);\n\t      var len = bytes.byteLength;\n\t      for (var i = 0; i < len; i++) {\n\t        binary += String.fromCharCode(bytes[i]);\n\t      }\n\t      return window.btoa(binary);\n\t    }\n\t\n\t    /**\n\t     * Converts utf8 encoded emebedData into string\n\t     *\n\t     * @returns string Decoded text\n\t     */\n\t\n\t  }, {\n\t    key: 'textualEmbedData',\n\t    value: function textualEmbedData() {\n\t      if (this.embededData == null) {\n\t        return null;\n\t      }\n\t      var encoded = this.base64EmbedData();\n\t      var bytes = _base2.default.decode(encoded);\n\t      var text = _utf2.default.decode(bytes);\n\t      return text;\n\t    }\n\t  }, {\n\t    key: 'fromJSON',\n\t    value: function fromJSON(json) {\n\t      this.MUID = json.muid;\n\t      if (json.created_at != null) {\n\t        this.createdAt = new Date(json.created_at);\n\t      }\n\t      if (json.updated_at != null) {\n\t        this.updatedAt = new Date(json.updated_at);\n\t      }\n\t      this.state = json.state;\n\t      this.ownerID = json.owner_id;\n\t      this.metadata = json.metadata;\n\t      this.mediaType = json.type;\n\t      this.dataState = json.data_state;\n\t      if (json.embeded_data != null) {\n\t        this.setEmbedDataFromBase64(json.embeded_data);\n\t      } else {\n\t        this.embededData = null;\n\t      }\n\t      this.dataDownloadURL = json.data_download_url;\n\t      this.dataUploadURL = json.data_upload_url;\n\t      this.representedSpaceMUID = json.represented_space_muid;\n\t    }\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      var json = {};\n\t      json.muid = this.MUID;\n\t      if (this.createdAt != null) {\n\t        json.created_at = this.createdAt.toISOString();\n\t      }\n\t      if (this.updatedAt != null) {\n\t        json.updated_at = this.updatedAt.toISOString();\n\t      }\n\t      json.state = this.state;\n\t      json.owner_id = this.ownerID;\n\t      json.metadata = this.metadata;\n\t      json.type = this.mediaType;\n\t      json.data_state = this.dataState;\n\t      json.embeded_data = this.base64EmbedData();\n\t      json.data_download_url = this.dataDownloadURL;\n\t      json.data_upload_url = this.dataUploadURL;\n\t      json.represented_space_muid = this.representedSpaceMUID;\n\t      return json;\n\t    }\n\t  }]);\n\t\n\t  return Media;\n\t}();\n\t\n\texports.default = Media;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar entityStates = exports.entityStates = {\n\t  /** Entity us visible to user */\n\t  visible: 0,\n\t  /** Entity is trashed and will be deleted soon */\n\t  deleted: 1\n\t};\n\t\n\t/** Environment of SDK */\n\t\n\t\n\t/** Entity visiblity state */\n\tvar environmentTypes = exports.environmentTypes = {\n\t  /** Production */\n\t  production: 0,\n\t  /** Staging (internal use only) */\n\t  stage: 1,\n\t  /** Local (internal use only) */\n\t  local: 2\n\t};\n\t\n\t/** Configuration of SDK */\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`.\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`.\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t\t// it as `root`.\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar InvalidCharacterError = function(message) {\n\t\t\tthis.message = message;\n\t\t};\n\t\tInvalidCharacterError.prototype = new Error;\n\t\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\t\n\t\tvar error = function(message) {\n\t\t\t// Note: the error messages used throughout this file match those used by\n\t\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\t\tthrow new InvalidCharacterError(message);\n\t\t};\n\t\n\t\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\t\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\t\n\t\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t\t// implementation. https://gist.github.com/atk/1020396\n\t\tvar decode = function(input) {\n\t\t\tinput = String(input)\n\t\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\t\tvar length = input.length;\n\t\t\tif (length % 4 == 0) {\n\t\t\t\tinput = input.replace(/==?$/, '');\n\t\t\t\tlength = input.length;\n\t\t\t}\n\t\t\tif (\n\t\t\t\tlength % 4 == 1 ||\n\t\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t\t) {\n\t\t\t\terror(\n\t\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar bitCounter = 0;\n\t\t\tvar bitStorage;\n\t\t\tvar buffer;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\twhile (++position < length) {\n\t\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t};\n\t\n\t\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\t\tvar encode = function(input) {\n\t\t\tinput = String(input);\n\t\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\t\terror(\n\t\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t\t'Latin1 range.'\n\t\t\t\t);\n\t\t\t}\n\t\t\tvar padding = input.length % 3;\n\t\t\tvar output = '';\n\t\t\tvar position = -1;\n\t\t\tvar a;\n\t\t\tvar b;\n\t\t\tvar c;\n\t\t\tvar d;\n\t\t\tvar buffer;\n\t\t\t// Make sure any padding is handled outside of the loop.\n\t\t\tvar length = input.length - padding;\n\t\n\t\t\twhile (++position < length) {\n\t\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\t\tc = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b + c;\n\t\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t\t// matching character for each of them to the output.\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\tif (padding == 2) {\n\t\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\t\tb = input.charCodeAt(++position);\n\t\t\t\tbuffer = a + b;\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t\t'='\n\t\t\t\t);\n\t\t\t} else if (padding == 1) {\n\t\t\t\tbuffer = input.charCodeAt(position);\n\t\t\t\toutput += (\n\t\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t\t'=='\n\t\t\t\t);\n\t\t\t}\n\t\n\t\t\treturn output;\n\t\t};\n\t\n\t\tvar base64 = {\n\t\t\t'encode': encode,\n\t\t\t'decode': decode,\n\t\t\t'version': '0.1.0'\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn base64;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = base64;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tfor (var key in base64) {\n\t\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.base64 = base64;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module), (function() { return this; }())))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\r\n\t\tif(!module.webpackPolyfill) {\r\n\t\t\tmodule.deprecate = function() {};\r\n\t\t\tmodule.paths = [];\r\n\t\t\t// module.parent = undefined by default\r\n\t\t\tmodule.children = [];\r\n\t\t\tmodule.webpackPolyfill = 1;\r\n\t\t}\r\n\t\treturn module;\r\n\t}\r\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(module, global) {/*! https://mths.be/utf8js v2.1.2 by @mathias */\n\t;(function(root) {\n\t\n\t\t// Detect free variables `exports`\n\t\tvar freeExports = typeof exports == 'object' && exports;\n\t\n\t\t// Detect free variable `module`\n\t\tvar freeModule = typeof module == 'object' && module &&\n\t\t\tmodule.exports == freeExports && module;\n\t\n\t\t// Detect free variable `global`, from Node.js or Browserified code,\n\t\t// and use it as `root`\n\t\tvar freeGlobal = typeof global == 'object' && global;\n\t\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\t\troot = freeGlobal;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar stringFromCharCode = String.fromCharCode;\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2decode(string) {\n\t\t\tvar output = [];\n\t\t\tvar counter = 0;\n\t\t\tvar length = string.length;\n\t\t\tvar value;\n\t\t\tvar extra;\n\t\t\twhile (counter < length) {\n\t\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\t\toutput.push(value);\n\t\t\t\t\t\tcounter--;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\toutput.push(value);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\t// Taken from https://mths.be/punycode\n\t\tfunction ucs2encode(array) {\n\t\t\tvar length = array.length;\n\t\t\tvar index = -1;\n\t\t\tvar value;\n\t\t\tvar output = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tvalue = array[index];\n\t\t\t\tif (value > 0xFFFF) {\n\t\t\t\t\tvalue -= 0x10000;\n\t\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t\t}\n\t\t\t\toutput += stringFromCharCode(value);\n\t\t\t}\n\t\t\treturn output;\n\t\t}\n\t\n\t\tfunction checkScalarValue(codePoint) {\n\t\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\t\tthrow Error(\n\t\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t\t' is not a scalar value'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction createByte(codePoint, shift) {\n\t\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t\t}\n\t\n\t\tfunction encodeCodePoint(codePoint) {\n\t\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\t\treturn stringFromCharCode(codePoint);\n\t\t\t}\n\t\t\tvar symbol = '';\n\t\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\t\tsymbol += createByte(codePoint, 6);\n\t\t\t}\n\t\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\t\treturn symbol;\n\t\t}\n\t\n\t\tfunction utf8encode(string) {\n\t\t\tvar codePoints = ucs2decode(string);\n\t\t\tvar length = codePoints.length;\n\t\t\tvar index = -1;\n\t\t\tvar codePoint;\n\t\t\tvar byteString = '';\n\t\t\twhile (++index < length) {\n\t\t\t\tcodePoint = codePoints[index];\n\t\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t\t}\n\t\t\treturn byteString;\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tfunction readContinuationByte() {\n\t\t\tif (byteIndex >= byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\t\treturn continuationByte & 0x3F;\n\t\t\t}\n\t\n\t\t\t// If we end up here, it’s not a continuation byte\n\t\t\tthrow Error('Invalid continuation byte');\n\t\t}\n\t\n\t\tfunction decodeSymbol() {\n\t\t\tvar byte1;\n\t\t\tvar byte2;\n\t\t\tvar byte3;\n\t\t\tvar byte4;\n\t\t\tvar codePoint;\n\t\n\t\t\tif (byteIndex > byteCount) {\n\t\t\t\tthrow Error('Invalid byte index');\n\t\t\t}\n\t\n\t\t\tif (byteIndex == byteCount) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Read first byte\n\t\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\t\tbyteIndex++;\n\t\n\t\t\t// 1-byte sequence (no continuation bytes)\n\t\t\tif ((byte1 & 0x80) == 0) {\n\t\t\t\treturn byte1;\n\t\t\t}\n\t\n\t\t\t// 2-byte sequence\n\t\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\t\tif (codePoint >= 0x80) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\t\treturn codePoint;\n\t\t\t\t} else {\n\t\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// 4-byte sequence\n\t\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\t\tbyte2 = readContinuationByte();\n\t\t\t\tbyte3 = readContinuationByte();\n\t\t\t\tbyte4 = readContinuationByte();\n\t\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\t\treturn codePoint;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthrow Error('Invalid UTF-8 detected');\n\t\t}\n\t\n\t\tvar byteArray;\n\t\tvar byteCount;\n\t\tvar byteIndex;\n\t\tfunction utf8decode(byteString) {\n\t\t\tbyteArray = ucs2decode(byteString);\n\t\t\tbyteCount = byteArray.length;\n\t\t\tbyteIndex = 0;\n\t\t\tvar codePoints = [];\n\t\t\tvar tmp;\n\t\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\t\tcodePoints.push(tmp);\n\t\t\t}\n\t\t\treturn ucs2encode(codePoints);\n\t\t}\n\t\n\t\t/*--------------------------------------------------------------------------*/\n\t\n\t\tvar utf8 = {\n\t\t\t'version': '2.1.2',\n\t\t\t'encode': utf8encode,\n\t\t\t'decode': utf8decode\n\t\t};\n\t\n\t\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t\t// like the following:\n\t\tif (\n\t\t\ttrue\n\t\t) {\n\t\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\t\treturn utf8;\n\t\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\t\tfreeModule.exports = utf8;\n\t\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\t\tvar object = {};\n\t\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\t\tfor (var key in utf8) {\n\t\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t} else { // in Rhino or a web browser\n\t\t\troot.utf8 = utf8;\n\t\t}\n\t\n\t}(this));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(7)(module), (function() { return this; }())))\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Media = __webpack_require__(4);\n\t\n\tvar _Media2 = _interopRequireDefault(_Media);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** Class represents user of Memex */\n\tvar User = function () {\n\t  /** Flag that tells if user set his password or he can be only authenticated using onboarding token */\n\t\n\t  /** Avatar */\n\t\n\t  /** Email of user (unique) */\n\t\n\t  /** Timestamp of last update */\n\t\n\t\n\t  /** Unique user ID */\n\t  function User() {\n\t    _classCallCheck(this, User);\n\t  }\n\t  /** Flag that tells if user has enabled advanced features. This will be in future replaced with full feature flags set. */\n\t\n\t  /** MUID of users origin space (root, entry point) */\n\t\n\t  /** Users password */\n\t\n\t  /** Fullname of user in format FirstName LastName */\n\t\n\t  /** Creation timestamp */\n\t\n\t\n\t  _createClass(User, [{\n\t    key: 'fromJSON',\n\t    value: function fromJSON(json) {\n\t      this.ID = json.id;\n\t      if (json.created_at != null) {\n\t        this.createdAt = new Date(json.created_at);\n\t      }\n\t      if (json.updated_at != null) {\n\t        this.updatedAt = new Date(json.updated_at);\n\t      }\n\t      this.fullname = json.fullname;\n\t      this.email = json.email;\n\t      this.password = json.password;\n\t      this.avatar = json.avatar;\n\t      this.originSpaceMUID = json.origin_space_muid;\n\t      this.hasPassword = json.has_password;\n\t      this.advanced = json.advanced;\n\t    }\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      var json = {};\n\t      if (this.createdAt != null) {\n\t        json.created_at = this.createdAt.toISOString();\n\t      }\n\t      if (this.updatedAt != null) {\n\t        json.updated_at = this.updatedAt.toISOString();\n\t      }\n\t      json.fullname = this.fullname;\n\t      json.email = this.email;\n\t      json.password = this.password;\n\t      json.avatar = this.avatar;\n\t      json.origin_space_muid = this.originSpaceMUID;\n\t      json.has_password = this.hasPassword;\n\t      json.advanced = this.advanced;\n\t      if (this.avatar != null) {\n\t        json.avatar_muid = this.avatar.MUID;\n\t      }\n\t      return json;\n\t    }\n\t  }]);\n\t\n\t  return User;\n\t}();\n\t\n\texports.default = User;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.spaceProcessingModes = exports.spaceTypes = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Media = __webpack_require__(4);\n\t\n\tvar _Media2 = _interopRequireDefault(_Media);\n\t\n\tvar _Types = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** Defines known space types */\n\tvar spaceTypes = exports.spaceTypes = {\n\t  /** Origin is simillar to collection but defines entry point into users spaces (root) */\n\t  origin: 'com.memex.origin',\n\t  /** Collection of links to spaces */\n\t  collection: 'com.memex.media.collection',\n\t  /** Space that represents web link */\n\t  webPage: 'com.memex.media.webpage',\n\t  /** Graphical kind of space */\n\t  image: 'com.memex.media.image',\n\t  /** Textual kind of space */\n\t  text: 'com.memex.media.text'\n\t};\n\t\n\t/** Defines space processing modes */\n\tvar spaceProcessingModes = exports.spaceProcessingModes = {\n\t  /** Don't process */\n\t  no: 'no',\n\t  /** Wait for results */\n\t  sync: 'sync',\n\t  /** Dont wait for results */\n\t  async: 'async'\n\t};\n\t\n\t/** Class represents space (abstraction for linked spaces) */\n\t\n\tvar Space = function () {\n\t  /** Set of media that represents space (eg webpage space is represented by url, thumbnail, summary) */\n\t\n\t  /** Caption */\n\t\n\t  /** Owner user ID */\n\t\n\t  /** Timestamp of last visit */\n\t\n\t  /** Creation timestamp */\n\t  function Space() {\n\t    _classCallCheck(this, Space);\n\t\n\t    this.state = _Types.entityStates.visible;\n\t    this.spaceType = spaceTypes.collection;\n\t    this.representations = [];\n\t    this.unread = false;\n\t  }\n\t\n\t  /**\n\t   * Returns visible representation of specified type\n\t   *\n\t   * @param MediaType mediaType: Type of media/representation\n\t   * @returns Media: Returns found media (null if not found)\n\t   */\n\t\n\t  /** Unread flag (if user needs to be notified about changes)*/\n\t\n\t  /** Tint color */\n\t\n\t  /** Type (eg. com.memex.media.collection, etc.) */\n\t\n\t  /** Visibility state */\n\t\n\t  /** Timestamp of last update */\n\t\n\t\n\t  /** Unique identifier */\n\t\n\t\n\t  _createClass(Space, [{\n\t    key: 'getRepresentation',\n\t    value: function getRepresentation(mediaType) {\n\t      if (this.representations == null) {\n\t        return null;\n\t      }\n\t      var _iteratorNormalCompletion = true;\n\t      var _didIteratorError = false;\n\t      var _iteratorError = undefined;\n\t\n\t      try {\n\t        for (var _iterator = this.representations[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n\t          var media = _step.value;\n\t\n\t          if (media.mediaType === mediaType && media.state === _Types.entityStates.visible) {\n\t            return media;\n\t          }\n\t        }\n\t      } catch (err) {\n\t        _didIteratorError = true;\n\t        _iteratorError = err;\n\t      } finally {\n\t        try {\n\t          if (!_iteratorNormalCompletion && _iterator.return) {\n\t            _iterator.return();\n\t          }\n\t        } finally {\n\t          if (_didIteratorError) {\n\t            throw _iteratorError;\n\t          }\n\t        }\n\t      }\n\t\n\t      return null;\n\t    }\n\t  }, {\n\t    key: 'fromJSON',\n\t    value: function fromJSON(json) {\n\t      this.MUID = json.muid;\n\t      if (json.created_at != null) {\n\t        this.createdAt = new Date(json.created_at);\n\t      }\n\t      if (json.updated_at != null) {\n\t        this.updatedAt = new Date(json.updated_at);\n\t      }\n\t      if (json.visited_at != null) {\n\t        this.visitedAt = new Date(json.visited_at);\n\t      }\n\t      this.state = json.state;\n\t      this.ownerID = json.owner_id;\n\t      this.spaceType = json.type_identifier;\n\t      this.caption = json.tag_label;\n\t      this.color = json.tag_color;\n\t      if (json.representations != null) {\n\t        this.representations = json.representations.map(function (json) {\n\t          var media = new _Media2.default();\n\t          media.fromJSON(json);\n\t          return media;\n\t        });\n\t      } else {\n\t        this.representations = null;\n\t      }\n\t      this.unread = json.unread || false;\n\t    }\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      var json = {};\n\t      json.muid = this.MUID;\n\t      if (this.createdAt != null) {\n\t        json.created_at = this.createdAt.toISOString();\n\t      }\n\t      if (this.updatedAt != null) {\n\t        json.updated_at = this.updatedAt.toISOString();\n\t      }\n\t      if (this.visitedAt != null) {\n\t        json.visited_at = this.visitedAt.toISOString();\n\t      }\n\t      json.state = this.state;\n\t      json.owner_id = this.ownerID;\n\t      json.type_identifier = this.spaceType;\n\t      json.tag_label = this.caption;\n\t      json.tag_color = this.color;\n\t      if (this.representations != null) {\n\t        json.representations = this.representations.map(function (media) {\n\t          return media.toJSON();\n\t        });\n\t      }\n\t      json.unread = this.unread;\n\t      return json;\n\t    }\n\t  }]);\n\t\n\t  return Space;\n\t}();\n\t\n\texports.default = Space;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Media = __webpack_require__(4);\n\t\n\tvar _Media2 = _interopRequireDefault(_Media);\n\t\n\tvar _Types = __webpack_require__(5);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** Class represents space visit */\n\tvar SpaceVisit = function () {\n\t\n\t  /** Unique identifier */\n\t  function SpaceVisit() {\n\t    _classCallCheck(this, SpaceVisit);\n\t  }\n\t  /** Timestamp of last visit */\n\t\n\t\n\t  _createClass(SpaceVisit, [{\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      var json = {};\n\t      json.muid = this.MUID;\n\t      if (this.visitedAt != null) {\n\t        json.visited_at = this.visitedAt.toISOString();\n\t      }\n\t      return json;\n\t    }\n\t  }]);\n\t\n\t  return SpaceVisit;\n\t}();\n\t\n\texports.default = SpaceVisit;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _Types = __webpack_require__(5);\n\t\n\tvar _Space = __webpack_require__(10);\n\t\n\tvar _Space2 = _interopRequireDefault(_Space);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t/** Class represents link between two spaces. */\n\tvar Link = function () {\n\t  /** Origin space */\n\t\n\t  /** Owner user ID */\n\t\n\t  /** Timestamp of last update */\n\t\n\t\n\t  /** Unique identifier */\n\t  function Link() {\n\t    _classCallCheck(this, Link);\n\t\n\t    this.state = _Types.entityStates.visible;\n\t  }\n\t  /** Target space */\n\t\n\t  /** Index that is used for sorting of links in space */\n\t\n\t  /** Visibility state */\n\t\n\t  /** Creation timestamp */\n\t\n\t\n\t  _createClass(Link, [{\n\t    key: 'fromJSON',\n\t    value: function fromJSON(json) {\n\t      this.MUID = json.muid;\n\t      if (json.created_at != null) {\n\t        this.createdAt = new Date(json.created_at);\n\t      }\n\t      if (json.updated_at != null) {\n\t        this.updatedAt = new Date(json.updated_at);\n\t      }\n\t      this.state = json.state;\n\t      this.ownerID = json.owner_id;\n\t      this.order = json.order;\n\t      if (json.origin_space_muid != null) {\n\t        this.origin = new _Space2.default();\n\t        this.origin.MUID = json.origin_space_muid;\n\t      }\n\t      if (json.target_space_muid != null) {\n\t        this.target = new _Space2.default();\n\t        this.target.MUID = json.target_space_muid;\n\t      }\n\t      if (json.target_space != null) {\n\t        this.target = new _Space2.default();\n\t        this.target.fromJSON(json.target_space);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'toJSON',\n\t    value: function toJSON() {\n\t      var json = {};\n\t      json.muid = this.MUID;\n\t      if (this.createdAt != null) {\n\t        json.created_at = this.createdAt.toISOString();\n\t      }\n\t      if (this.updatedAt != null) {\n\t        json.updated_at = this.updatedAt.toISOString();\n\t      }\n\t      json.state = this.state;\n\t      json.owner_id = this.ownerID;\n\t      json.order = this.order;\n\t      if (this.target != null) {\n\t        json.target_space_muid = this.target.MUID;\n\t      }\n\t      if (this.origin != null) {\n\t        json.target_space_muid = this.origin.MUID;\n\t      }\n\t      return json;\n\t    }\n\t  }]);\n\t\n\t  return Link;\n\t}();\n\t\n\texports.default = Link;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar appStates = exports.appStates = {\n\t  /** App is new and review wasn't requested yet */\n\t  new: 0,\n\t  /** Appr review is requested */\n\t  requested: 1,\n\t  /** App was approved and will get higher limits */\n\t  approved: 2,\n\t  /** App was rejected by reviewer */\n\t  rejected: 3,\n\t  /** App was blocked by admin */\n\t  blocked: 4\n\t};\n\t\n\t/** Platform/language of SDK */\n\t\n\t\n\t/** Approval state of app  */\n\tvar appPlatforms = exports.appPlatforms = {\n\t  /** Native REST API */\n\t  rest: 0,\n\t  /** Swift */\n\t  swift: 1,\n\t  /** JavaScript */\n\t  javaScript: 2,\n\t  /** Go */\n\t  golang: 3\n\t};\n\t\n\t/** Class representing app. */\n\t\n\tvar App = function () {\n\t  /** Approval state of the app */\n\t\n\t  /** App product page */\n\t\n\t  /** Secription of app (is used in review process) */\n\t\n\t\n\t  /** Unique identifier */\n\t  function App() {\n\t    _classCallCheck(this, App);\n\t  }\n\t  /** Default plaform for the app. App can be used from any other platform. This value is used only for suggestion of SDK. */\n\t\n\t  /** App token (is sent with every request in X-App-Token HTTP header) */\n\t\n\t  /** Developer contact email */\n\t\n\t  /** Name of app */\n\t\n\t\n\t  _createClass(App, [{\n\t    key: \"fromJSON\",\n\t    value: function fromJSON(json) {\n\t      this.id = json.id;\n\t      this.name = json.name;\n\t      this.description = json.description;\n\t      this.email = json.email;\n\t      this.webpage = json.webpage;\n\t      this.token = json.token;\n\t      this.state = json.state;\n\t      this.platform = json.platform;\n\t    }\n\t  }, {\n\t    key: \"toJSON\",\n\t    value: function toJSON() {\n\t      return {\n\t        name: this.name,\n\t        description: this.description,\n\t        email: this.email,\n\t        webpage: this.webpage,\n\t        platform: this.platform\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return App;\n\t}();\n\t\n\texports.default = App;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** memex-js-sdk.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap cafab3fa64dbad7da256\n **/","// @flow\n\nimport { Spaces } from './Spaces.js';\nimport User from './data/User.js';\nimport Media from './data/Media.js';\nimport Space from './data/Space.js';\nimport SpaceVisit from './data/SpaceVisit.js';\nimport Link from './data/Link.js';\nimport App from './data/App.js';\nimport { environmentTypes, entityStates } from './data/Types.js';\nimport { mediaTypes, mediaDataStates } from './data/Media.js';\nimport { spaceTypes } from './data/Space.js';\nimport { appPlatforms } from './data/App.js';\nimport type { MediaType, MediaDataState } from './data/Media.js';\nimport type { SpaceType } from './data/Space.js';\nimport type { AppPlatform } from './data/App.js';\n\nvar Memex = {\n  /** Shared instance of Spaces */\n  sharedClient: new Spaces(),\n  entityStates: entityStates,\n  environmentTypes: environmentTypes,\n  mediaTypes: mediaTypes,\n  spaceTypes: spaceTypes,\n  mediaDataStates: mediaDataStates,\n  appPlatforms: appPlatforms,\n  Media: Media,\n  Space: Space,\n  SpaceVisit: SpaceVisit,\n  Link: Link,\n  App: App,\n  User: User,\n}\n\nexport default Memex;\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Exports.js\n **/","// @flow\n\nimport 'whatwg-fetch';\n\nimport { Auth } from './Auth.js';\n\nimport Media from './data/Media.js';\nimport User from './data/User.js';\nimport Space from './data/Space.js';\nimport SpaceVisit from './data/SpaceVisit.js';\nimport Link from './data/Link.js';\nimport App from './data/App.js';\nimport { mediaTypes, mediaDataStates } from './data/Media.js';\nimport { spaceTypes, spaceProcessingModes } from './data/Space.js';\nimport type { SpaceProcessingMode } from './data/Space.js';\nimport type { EnvironmentType, Configuration } from './data/Types.js';\nimport { environmentTypes } from './data/Types.js';\n\ntype Method = string;\nconst methods = {\n  GET: 'GET',\n  POST: 'POST'\n};\n\nexport class Spaces {\n\n  _configuration: Configuration;\n  _auth: Auth;\n\n  constructor() {\n    this._configuration = {\n      appToken: \"\",\n      environment: environmentTypes.production\n    }\n    this._setEnvironment(environmentTypes.production)\n  }\n\n  _isConfigured(): bool {\n    if (this._configuration.appToken === \"\") {\n      console.error(\"Missing Memex configuration, call Memex.client.setAppToken('<Your app token>')\");\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Sets app API token\n   *\n   * @param string token: App's unique API token\n   */\n  setAppToken(token: string) {\n    this._configuration.appToken = token;\n    this._auth.appToken = token;\n  }\n\n  _setEnvironment(environment: EnvironmentType) {\n    this._configuration.environment = environment;\n    this._auth = new Auth(this._APIURL(environment));\n    this._auth.appToken = this._configuration.appToken;\n  }\n\n  _APIURL(environment: EnvironmentType): string {\n    switch (environment) {\n      case environmentTypes.production:\n        return 'https://mmx-spaces-api-prod.herokuapp.com';\n      case environmentTypes.stage:\n        return 'https://mmx-spaces-api-stage.herokuapp.com';\n      case environmentTypes.local:\n        return 'http://localhost:5000';\n      default:\n        console.error('Unknown environment');\n        return '';\n    }\n  }\n\n  /**\n   * Checks if user is logged in\n   *\n   * @returns bool: Returns flag that tells if user is authenticated\n   */\n  isLoggedIn(): bool {\n    if (!this._isConfigured()) {\n      return false;\n    }\n    return this._auth.isAuthorized();\n  }\n\n  /**\n   * Login user using standard email/password credentials\n   *\n   * @param string email: Users unique email\n   * @param string password: Users secret password\n   * @param Object completion: Completion function that returns user token andd success flag\n   */\n  loginWithCredentials(email: string,\n                       password: string,\n                       completion: (token: ?string, success: bool) => void) {\n    if (!this._isConfigured()) {\n      return;\n    }\n    this._auth.loginWithCredentials(email, password, completion);\n  }\n\n  /**\n   * Login user using onboarding token\n   *\n   * @param string onboardingToken: Onboarding token\n   * @param Object completion: Completion function that returns user token andd success flag\n   */\n  loginWithOnboardingToken(onboardingToken: string,\n                           completion: (token: ?string, success: bool) => void) {\n    if (!this._isConfigured()) {\n      return;\n    }\n    this._auth.loginWithOnboardingToken(onboardingToken, completion);\n  }\n\n  /**\n   * Logout user. Removes user token from local storage.\n   */\n  logout() {\n    if (!this._isConfigured()) {\n      return;\n    }\n    this._auth.deauthorize();\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Media Handler\n  //////////////////////////////////////////////////////////////////////\n\n  /**\n   * New media creation. If there is some data that needs to be uploaded put it to dataUploadURL and call markMediaAsUploaded.\n   *\n   * @param Media media: New media\n   * @param Object completion: Completion handler that will get created media and success flag\n   */\n  createMedia(media: Media,\n              completion: (media: ?Media, success: bool) => void) {\n    let body = {\n      media: media.toJSON(),\n    };\n    this._perform(methods.POST,\n                  'media',\n                  null,\n                  body,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let media = new Media();\n      media.fromJSON(json.media);\n      completion(media, true);\n    });\n  }\n\n  /**\n   * Returns media object. It can be used when dataDownloadURL is expired and new is needed.\n   *\n   * @param string mediaMUID: Requested media MUID\n   * @param Object completion: Completion handler that will get media and success flag\n   */\n  getMedia(mediaMUID: string, completion: (media: ?Media, success: bool)=>void) {\n    this._perform(\n      methods.GET,\n      'media/'+mediaMUID,\n      null,\n      null,\n      (json: ?Object, success: bool) => {\n        if (success === false || json == null) {\n          completion(null, false);\n          return;\n        }\n        let media = new Media();\n        media.fromJSON(json.media);\n        completion(media, true);\n      });\n  }\n\n  /**\n   * Marks media data as uploaded. It means that data was uploaded to dataUploadURL and dataState now can change to valid state.\n   *\n   * @param string mediaMUID: Requested media MUID\n   * @param Object completion: Completion handler\n   */\n  markMediaAsUploaded(mediaMUID: string, completion: (success: bool)=>void) {\n    this._perform(\n      methods.POST,\n      'media/'+mediaMUID+'/mark-as-uploaded',\n      null,\n      null,\n      (json: ?Object, success: bool) => {\n        if (success === false || json == null) {\n          completion(false);\n          return;\n        }\n        completion(true);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Spaces Handler\n  //////////////////////////////////////////////////////////////////////\n\n  /**\n   * Creates collection space\n   *\n   * @param string tag: Caption of new space\n   * @param bool autodump: True if new space should be autodumped\n   * @param Object completion: Completion handler that will get created space and success flag\n   */\n  createCollectionSpace(tag: string,\n                        autodump: bool,\n                        completion: (space: ?Space, success: bool) => void) {\n    let space = new Space();\n    space.caption = tag;\n    space.color = null;\n    space.spaceType = spaceTypes.collection;\n    space.representations = [];\n    this.createSpace(space, spaceProcessingModes.sync, autodump, completion);\n  }\n\n  /**\n   * Creates image space from URL\n   *\n   * @param string url: Source URL of image\n   * @param bool autodump: True if new space should be autodumped\n   * @param Object completion: Completion handler that will get created space and success flag\n   */\n  createImageSpace(imageURL: string,\n                   autodump: bool,\n                   completion: (space: ?Space, success: bool) => void) {\n    let media = new Media();\n    media.dataDownloadURL = imageURL;\n    media.dataState = mediaDataStates.dataValid;\n    media.mediaType = mediaTypes.source;\n\n    let space = new Space();\n    space.spaceType = spaceTypes.image;\n    space.representations = [media];\n\n    this.createSpace(space, spaceProcessingModes.sync, autodump, completion);\n  }\n\n  /**\n   * Creates webpage space from URL\n   *\n   * @param string url: URL of webpage\n   * @param bool autodump: True if new space should be autodumped\n   * @param Object completion: Completion handler that will get created space and success flag\n   */\n  createWebPageSpace(url: string,\n                     autodump: bool,\n                     completion: (space: ?Space, success: bool) => void) {\n    let media = new Media();\n    media.setEmbedDataFromString(url);\n    media.dataState = mediaDataStates.dataValid;\n    media.mediaType = mediaTypes.reference;\n\n    let space = new Space();\n    space.spaceType = spaceTypes.webPage;\n    space.representations = [media];\n\n    this.createSpace(space, spaceProcessingModes.sync, autodump, completion);\n  }\n\n  /**\n   * Creates text space\n   *\n   * @param string text: Content text\n   * @param bool autodump: True if new space should be autodumped\n   * @param Object completion: Completion handler that will get created space and success flag\n   */\n  createTextSpace(text: string,\n                  autodump: bool,\n                  completion: (space: ?Space, success: bool) => void) {\n    let media = new Media();\n    media.setEmbedDataFromString(text);\n    media.dataState = mediaDataStates.dataValid;\n    media.mediaType = mediaTypes.source;\n\n    let space = new Space();\n    space.spaceType = spaceTypes.text;\n    space.representations = [media];\n\n    this.createSpace(space, spaceProcessingModes.sync, autodump, completion);\n  }\n\n  /**\n   * Creates space\n   *\n   * @param Space space: New space\n   * @param SpaceProcessingMode process: Defines processing mode\n   * @param bool autodump: True if new space should be autodumped\n   * @param Object completion: Completion handler that will get created space and success flag\n   */\n  createSpace(space: Space,\n              process: SpaceProcessingMode,\n              autodump: bool,\n              completion: (space: ?Space, success: bool) => void) {\n    let body = {\n      space: space.toJSON(),\n      process: process,\n      autodump: autodump\n    };\n    this._perform(methods.POST,\n                  'spaces',\n                  null,\n                  body,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let space = new Space();\n      space.fromJSON(json.space);\n      completion(space, true);\n    });\n  }\n\n  /**\n   * Get space\n   *\n   * @param string spaceMUID: Requested space MUID (or you can use keyword 'origin' for fetching users's origin space)\n   * @param Object completion: Completion handler that will get space and success flag\n   */\n  getSpace(spaceMUID: string, completion: (space: ?Space, success: bool)=>void) {\n    this._perform(\n      methods.GET,\n      'spaces/'+spaceMUID,\n      null,\n      null,\n      (json: ?Object, success: bool) => {\n        if (success === false || json == null) {\n          completion(null, false);\n          return;\n        }\n        let space = new Space();\n        space.fromJSON(json.space);\n        completion(space, true);\n      });\n  }\n\n  /**\n   * Log space visits\n   *\n   * @param string visits: Array of space visits. Can contain multiple spaces with same MUID.\n   * @param Object completion: Completion handler\n   */\n  logSpaceVisits(visits: Array<SpaceVisit>, completion: (success: bool)=>void) {\n    let body = {\n      spaces: visits.map(function(visit: SpaceVisit): Media {\n        return visit.toJSON();\n      })\n    };\n    this._perform(\n      methods.POST,\n      'spaces/log-visits',\n      null,\n      body,\n      (json: ?Object, success: bool) => {\n        if (success === false || json == null) {\n          completion(false);\n          return;\n        }\n        completion(true);\n      });\n  }\n\n  /**\n   * Returns abstraction (caption) for set of spaces\n   *\n   * @param string muids: Set of space MUIDs for that will be caption generated\n   * @param Object completion: Completion handler\n   */\n  getSpacesAbstract(muids: Array<string>, completion: (caption: ?string, success: bool)=>void) {\n    let body = {\n      space_MUIDs: muids\n    };\n    this._perform(\n      methods.POST,\n      'spaces/abstract',\n      null,\n      body,\n      (json: ?Object, success: bool) => {\n        if (success === false || json == null) {\n          completion(null, false);\n          return;\n        }\n        completion(json.caption, true);\n      });\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Links Handler\n  //////////////////////////////////////////////////////////////////////\n\n  /**\n   * NNew link creation.\n   *\n   * @param Link link: New link\n   * @param Object completion: Completion handler that will get created media and success flag\n   */\n  createMedia(link: Link,\n              completion: (link: ?Link, success: bool) => void) {\n    let body = {\n      link: link.toJSON(),\n    };\n    this._perform(methods.POST,\n                  'links',\n                  null,\n                  body,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let link = new Link();\n      link.fromJSON(json.link);\n      completion(link, true);\n    });\n  }\n\n  /**\n   * Get space links\n   *\n   * @param string spaceMUID: Requested space MUID (or you can use keyword 'origin' for fetching users's origin space)\n   * @param Object completion: Completion handler that will get array of links and success flag\n   */\n  getSpaceLinks(spaceMUID: string,\n                completion: (links: ?Array<Link>, success: bool)=>void) {\n    let path = 'spaces/'+spaceMUID+'/links';\n    let query = {\n      includeTarget: true\n    };\n    this._perform(methods.GET, path, query, null, (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let links = [];\n      for (let item of json.links) {\n        let link = new Link();\n        link.fromJSON(item);\n        links.push(link);\n      }\n      completion(links, true);\n    });\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // App Handler\n  //////////////////////////////////////////////////////////////////////\n\n  /**\n   * New app creation\n   *\n   * @param App app: New app object\n   * @param Object completion: Completion handler that will get created app and success flag\n   */\n  createApp(app: App, completion: (app: ?App, success: bool) => void) {\n    let body = {\n      app: app.toJSON(),\n    };\n    this._perform(methods.POST, 'apps', null, body, (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let newApp = new App();\n      newApp.fromJSON(json.app);\n      completion(newApp, true);\n    });\n  }\n\n  /**\n   * Get app detail\n   *\n   * @param number id: Fetched App ID\n   * @param Object completion: Completion handler that will get app and success flag\n   */\n  getApp(id: number, completion: (app: ?App, success: bool) => void) {\n    this._perform(methods.GET, 'apps/'+id,\n                  null,\n                  null,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let newApp = new App();\n      newApp.fromJSON(json.app);\n      completion(newApp, true);\n    });\n  }\n\n  /**\n   * Update app\n   *\n   * @param App app: Updated app object\n   * @param Object completion: Completion handler that will get updated app and success flag\n   */\n  updateApp(app: App, completion: (app: ?App, success: bool) => void) {\n    if (app.id === null) {\n      console.error(\"Missing app id\");\n      completion(null, false);\n      return;\n    }\n    let body = {\n      app: app.toJSON(),\n    };\n    this._perform(methods.POST,\n                  'apps/'+app.id,\n                  null,\n                  body,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let newApp = new App();\n      newApp.fromJSON(json.app);\n      completion(newApp, true);\n    });\n  }\n\n  /**\n   * Renew app token. Will generate new app token (all clients that uses old one will stop working!!)\n   *\n   * @param number appID: App ID\n   * @param Object completion: Completion handler that will get updated app and success flag\n   */\n  renewAppToken(appID: number, completion: (app: ?App, success: bool) => void) {\n    this._perform(methods.POST,\n                  'apps/'+appID+\"/renew-token\",\n                  null,\n                  {},\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let newApp = new App();\n      newApp.fromJSON(json.app);\n      completion(newApp, true);\n    });\n  }\n\n  /**\n   * Get all users apps\n   *\n   * @param Object completion: Completion handler that will get array of all users apps and success flag\n   */\n  getApps(completion: (apps: ?Array<App>, success: bool)=>void) {\n    let path = 'apps';\n    this._perform(methods.GET, path, {}, null, (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let apps = [];\n      for (let item of json.apps) {\n        let app = new App();\n        app.fromJSON(item);\n        apps.push(app);\n      }\n      completion(apps, true);\n    });\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // User Handler\n  //////////////////////////////////////////////////////////////////////\n\n  /**\n   * Creates new user. User object must contains password and valid email.\n   *\n   * @param User user: New user object\n   * @param string onboardingToken: Onboarding token (optional)\n   * @param Object completion: Completion handler that will return new user object and success flag\n   */\n  createUser(user: User, onboardingToken: ?string, completion: (user: ?User, success: bool) => void) {\n    var body = {\n      user: user.toJSON(),\n      onboardingToken: onboardingToken\n    };\n    this._perform(methods.POST,\n                  'users',\n                  null,\n                  body,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let newUser = new User();\n      newUser.fromJSON(json.user);\n      completion(newUser, true);\n    });\n  }\n\n  /**\n   * Fetch user detail.\n   *\n   * @param number userID: Optional user ID. If null then you will get authenticated user detail.\n   * @param Object completion: Completion handler that will return requested user object and success flag\n   */\n  getUser(userID: ?number, completion: (user: ?User, success: bool) => void) {\n    this._perform(methods.GET, 'users/' + (userID == null ? 'self' : userID),\n                  null,\n                  null,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let newUser = new User();\n      newUser.fromJSON(json.user);\n      completion(newUser, true);\n    });\n  }\n\n  /**\n   * Update user. For password updates use setUserPassword function.\n   *\n   * @param User user: Updated user object\n   * @param Object completion: Completion handler that will return update user object and success flag\n   */\n  updateUser(user: User, completion: (user: ?User, success: bool) => void) {\n    var body = {\n      user: user.toJSON()\n    };\n    this._perform(methods.POST,\n                  'users/self',\n                  null,\n                  body,\n                  (json: ?Object, success: bool) => {\n      if (success === false || json == null) {\n        completion(null, false);\n        return;\n      }\n      let newUser = new User();\n      newUser.fromJSON(json.user);\n      completion(newUser, true);\n    });\n  }\n\n  /**\n   * Sets user password.\n   *\n   * @param string oldPassword: Old user's password (if any exists - user was not authenticated by onboarding token)\n   * @param string newPassword: New password\n   * @param Object completion: Completion handler that will return only success flag\n   */\n  setUserPassword(oldPassword: ?string,\n                  newPassword: string,\n                  completion: (success: bool) => void) {\n    var body = {\n      old_password: oldPassword,\n      new_password: newPassword\n    };\n    this._perform(methods.POST,\n                  'users/self/change-password',\n                  null,\n                  body,\n                  (json: ?Object, success: bool) => {\n      if (success === false) {\n        completion(false);\n        return;\n      }\n      completion(true);\n    });\n  }\n\n  //////////////////////////////////////////////////////////////////////\n  // Shared\n  //////////////////////////////////////////////////////////////////////\n\n  _perform(method: Method, path: string, query: ?Object, body: ?Object,\n           completion: (json: ?Object, success: bool) => void) {\n    if (!this._isConfigured()) {\n      return;\n    }\n\n    let headers: Object = {\n      'Content-Type': 'application/json',\n      'X-App-Token': this._configuration.appToken\n    }\n    if (this._auth.userToken != null) {\n      headers['X-User-Token'] = this._auth.userToken;\n    }\n    let options = {\n      method: method,\n      body: body != null ? JSON.stringify(body) : null,\n      headers: headers\n    };\n\n    let host = this._APIURL(this._configuration.environment);\n    let url = host + '/' + path;\n    let resultQuery = query;\n    if (resultQuery != null) {\n      let keys = Object.keys(resultQuery);\n      let queryString = keys.reduce(function(array: Array<string>, key: string): Array<string> {\n        if (resultQuery == null) {\n          return array;\n        }\n        let value = resultQuery[key];\n        array.push(key+'='+encodeURIComponent(value));\n        return array;\n      }, []).join('&');\n      url += '?' + queryString;\n    }\n    fetch(url, options)\n      .then((response: Object): Object => {\n        if (response.status < 200 || response.status >= 300) {\n          throw response;\n        } else {\n          return response;\n        }\n      })\n      .then((data: any): Object => {\n        return data.json();\n      })\n      .then((response: Object) => {\n        completion(response, true);\n      },\n      (error: Object) => {\n        completion(null, false);\n      });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Spaces.js\n **/","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/whatwg-fetch/fetch.js\n ** module id = 2\n ** module chunks = 0\n **/","// @flow\n\nimport 'whatwg-fetch';\n\nimport type { Configuration } from './data/Types.js';\n\ntype AuthReponse = {\n  token: ?string;\n}\n\nconst tokenKey = 'token';\n\nexport class Auth {\n\n  userToken: ?string;\n  appToken: string;\n  _host: string;\n\n  constructor(host: string) {\n    this._host = host;\n    this._loadFromStorage();\n  }\n\n  _loadFromStorage() {\n    this.userToken = localStorage.getItem(tokenKey);\n    if (this.userToken === 'null') {\n      this.userToken = null;\n    }\n  }\n\n  _storeIntoStorage() {\n    if (this.userToken != null) {\n      localStorage.setItem(tokenKey, this.userToken);\n    } else {\n      localStorage.removeItem(tokenKey);\n    }\n  }\n\n  isAuthorized(): bool {\n    return this.userToken != null;\n  }\n\n  deauthorize() {\n    this.userToken = null;\n    this._storeIntoStorage();\n  }\n\n  loginWithCredentials(email: string, password: string, completion: (token: ?string, success: bool)=>void) {\n    let data = {\n      identity: {\n        email: email\n      },\n      secret: {\n        password: password\n      }\n    };\n    this.login(data, completion);\n  }\n\n  loginWithOnboardingToken(onboardingToken: string, completion: (token: ?string, success: bool)=>void) {\n    let data = {\n      secret: {\n        onboarding_token: onboardingToken\n      }\n    };\n    this.login(data, completion);\n  }\n\n  login(data: Object, completion: (token: ?string, success: bool)=>void) {\n    let options = {\n      method: 'POST',\n      body: JSON.stringify(data),\n      headers: {\n        'Content-Type': 'application/json',\n        'X-App-Token': this.appToken\n      }\n    };\n    let url = this._host + '/users/request-token';\n\n    fetch(url, options)\n      .then((response: Object): Object => {\n        if (response.status < 200 || response.status >= 300) {\n          throw response;\n        } else {\n          return response;\n        }\n      })\n      .then((data: any): AuthReponse => {\n        return data.json();\n      })\n      .then((response: AuthReponse) => {\n        this.userToken = response.token;\n        this._storeIntoStorage();\n        completion(this.userToken, true);\n      },\n      () => {\n        this.userToken = null;\n        completion(null, false);\n      });\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/Auth.js\n **/","// @flow\n\nimport type { EntityState } from './Types.js';\nimport { entityStates } from './Types.js';\n\nimport base64 from 'base-64';\nimport utf8 from 'utf8';\n\n/** Type of media */\nexport type MediaType = string;\nexport const mediaTypes = {\n  /** Source of data (every other representation can be derived from it). */\n  source: 'source',\n  /** Reference is link to source */\n  reference: 'reference',\n  /** Preview is visual/graphical abstraction of source/reference */\n  preview: 'preview',\n  /** Summary is textual abstraction of source/reference */\n  summary: 'summary'\n};\n\n/** Media data upload state */\nexport type MediaDataState = number;\nexport const mediaDataStates = {\n  /** Client is waiting for server to generate signed dataUploadURL */\n  waitingForNewUploadURL: 0,\n  /** Data Upload URL is valid and client can upload data */\n  readyForDataUpload: 1,\n  /** Data is valid and can be downloaded/used */\n  dataValid: 2\n};\n\n/** Class represents media component of space */\nexport default class Media {\n\n  /** Unique media identifier */\n  MUID: ?string;\n  /** Creation timestamp */\n  createdAt: ?Date;\n  /** Timestamp of last update */\n  updatedAt: ?Date;\n  /** Visibility state */\n  state: EntityState;\n  /** Owner user ID */\n  ownerID: ?number;\n  /** JSON encodec dictionary of media metadata eg. size, encoding, etc. */\n  metadata: ?string;\n  /** Type of media */\n  mediaType: ?MediaType;\n  /** Validity of media data */\n  dataState: MediaDataState;\n  /** Embed media binary data (only if small enough, otherwise use dataDownloadURL and dataUploadURL) */\n  embededData: ?ArrayBuffer;\n  /** Download url for data (exclusive with embedData) */\n  dataDownloadURL: ?string;\n  /** Upload link for new data. After data is uploaded it is needed to call mark media as uploaded function. */\n  dataUploadURL: ?string;\n  /** If media represents any space then its MUID is present */\n  representedSpaceMUID: ?string;\n\n  constructor() {\n    this.state = entityStates.visible;\n  }\n\n  /**\n   * Sets embedData (binary format) from base64 format\n   *\n   * @param string base64: Base64 encoded data\n   */\n  setEmbedDataFromBase64(base64: string) {\n    let binaryString = window.atob(base64);\n    let length = binaryString.length;\n    let bytes = new Uint8Array(length);\n    for (let i = 0; i < length; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    this.embededData = bytes.buffer;\n  }\n\n  /**\n   * Sets embedData (binary format) from ANSCI ancoded text\n   *\n   * @param string value: ANSCII encoded data\n   */\n  setEmbedDataFromString(value: string) {\n    let length = value.length;\n    let array = new Uint8Array(length);\n    for (let index = 0; index < length; index++) {\n      array[index] = value.charCodeAt(index);\n    }\n    this.embededData = array.buffer;\n  }\n\n  /**\n   * Converts emebedData into base64 encoded string\n   *\n   * @returns string Base64 encoded embedData\n   */\n  base64EmbedData(): ?string {\n    if (this.embededData == null) {\n      return null;\n    }\n    let binary = '';\n    let bytes = new Uint8Array(this.embededData);\n    let len = bytes.byteLength;\n    for (let i = 0; i < len; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }\n    return window.btoa(binary);\n  }\n\n  /**\n   * Converts utf8 encoded emebedData into string\n   *\n   * @returns string Decoded text\n   */\n  textualEmbedData(): ?string {\n    if (this.embededData == null) {\n      return null;\n    }\n    let encoded = this.base64EmbedData();\n    let bytes = base64.decode(encoded);\n    let text = utf8.decode(bytes);\n    return text;\n  }\n\n  fromJSON(json: Object) {\n    this.MUID = json.muid;\n    if (json.created_at != null) {\n      this.createdAt = new Date(json.created_at);\n    }\n    if (json.updated_at != null) {\n      this.updatedAt = new Date(json.updated_at);\n    }\n    this.state = json.state;\n    this.ownerID = json.owner_id;\n    this.metadata = json.metadata;\n    this.mediaType = json.type;\n    this.dataState = json.data_state;\n    if (json.embeded_data != null) {\n      this.setEmbedDataFromBase64(json.embeded_data);\n    } else {\n      this.embededData = null;\n    }\n    this.dataDownloadURL = json.data_download_url;\n    this.dataUploadURL = json.data_upload_url;\n    this.representedSpaceMUID = json.represented_space_muid;\n  }\n\n  toJSON(): Object {\n    let json: any = {};\n    json.muid = this.MUID;\n    if (this.createdAt != null) {\n      json.created_at = this.createdAt.toISOString();\n    }\n    if (this.updatedAt != null) {\n      json.updated_at = this.updatedAt.toISOString();\n    }\n    json.state = this.state;\n    json.owner_id = this.ownerID;\n    json.metadata = this.metadata;\n    json.type = this.mediaType;\n    json.data_state = this.dataState;\n    json.embeded_data = this.base64EmbedData();\n    json.data_download_url = this.dataDownloadURL;\n    json.data_upload_url = this.dataUploadURL;\n    json.represented_space_muid = this.representedSpaceMUID;\n    return json;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data/Media.js\n **/","// @flow\n\n/** Entity visiblity state */\nexport type EntityState = number;\nexport const entityStates = {\n  /** Entity us visible to user */\n  visible: 0,\n  /** Entity is trashed and will be deleted soon */\n  deleted: 1\n};\n\n/** Environment of SDK */\nexport type EnvironmentType = number;\nexport const environmentTypes = {\n  /** Production */\n  production: 0,\n  /** Staging (internal use only) */\n  stage: 1,\n  /** Local (internal use only) */\n  local: 2\n};\n\n/** Configuration of SDK */\nexport type Configuration = {\n  /** App (developer) token */\n  appToken: string,\n  /** SDK environment */\n  environment: EnvironmentType\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data/Types.js\n **/","/*! http://mths.be/base64 v0.1.0 by @mathias | MIT license */\n;(function(root) {\n\n\t// Detect free variables `exports`.\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`.\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code, and use\n\t// it as `root`.\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar InvalidCharacterError = function(message) {\n\t\tthis.message = message;\n\t};\n\tInvalidCharacterError.prototype = new Error;\n\tInvalidCharacterError.prototype.name = 'InvalidCharacterError';\n\n\tvar error = function(message) {\n\t\t// Note: the error messages used throughout this file match those used by\n\t\t// the native `atob`/`btoa` implementation in Chromium.\n\t\tthrow new InvalidCharacterError(message);\n\t};\n\n\tvar TABLE = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t// http://whatwg.org/html/common-microsyntaxes.html#space-character\n\tvar REGEX_SPACE_CHARACTERS = /[\\t\\n\\f\\r ]/g;\n\n\t// `decode` is designed to be fully compatible with `atob` as described in the\n\t// HTML Standard. http://whatwg.org/html/webappapis.html#dom-windowbase64-atob\n\t// The optimized base64-decoding algorithm used is based on @atk’s excellent\n\t// implementation. https://gist.github.com/atk/1020396\n\tvar decode = function(input) {\n\t\tinput = String(input)\n\t\t\t.replace(REGEX_SPACE_CHARACTERS, '');\n\t\tvar length = input.length;\n\t\tif (length % 4 == 0) {\n\t\t\tinput = input.replace(/==?$/, '');\n\t\t\tlength = input.length;\n\t\t}\n\t\tif (\n\t\t\tlength % 4 == 1 ||\n\t\t\t// http://whatwg.org/C#alphanumeric-ascii-characters\n\t\t\t/[^+a-zA-Z0-9/]/.test(input)\n\t\t) {\n\t\t\terror(\n\t\t\t\t'Invalid character: the string to be decoded is not correctly encoded.'\n\t\t\t);\n\t\t}\n\t\tvar bitCounter = 0;\n\t\tvar bitStorage;\n\t\tvar buffer;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\twhile (++position < length) {\n\t\t\tbuffer = TABLE.indexOf(input.charAt(position));\n\t\t\tbitStorage = bitCounter % 4 ? bitStorage * 64 + buffer : buffer;\n\t\t\t// Unless this is the first of a group of 4 characters…\n\t\t\tif (bitCounter++ % 4) {\n\t\t\t\t// …convert the first 8 bits to a single ASCII character.\n\t\t\t\toutput += String.fromCharCode(\n\t\t\t\t\t0xFF & bitStorage >> (-2 * bitCounter & 6)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t};\n\n\t// `encode` is designed to be fully compatible with `btoa` as described in the\n\t// HTML Standard: http://whatwg.org/html/webappapis.html#dom-windowbase64-btoa\n\tvar encode = function(input) {\n\t\tinput = String(input);\n\t\tif (/[^\\0-\\xFF]/.test(input)) {\n\t\t\t// Note: no need to special-case astral symbols here, as surrogates are\n\t\t\t// matched, and the input is supposed to only contain ASCII anyway.\n\t\t\terror(\n\t\t\t\t'The string to be encoded contains characters outside of the ' +\n\t\t\t\t'Latin1 range.'\n\t\t\t);\n\t\t}\n\t\tvar padding = input.length % 3;\n\t\tvar output = '';\n\t\tvar position = -1;\n\t\tvar a;\n\t\tvar b;\n\t\tvar c;\n\t\tvar d;\n\t\tvar buffer;\n\t\t// Make sure any padding is handled outside of the loop.\n\t\tvar length = input.length - padding;\n\n\t\twhile (++position < length) {\n\t\t\t// Read three bytes, i.e. 24 bits.\n\t\t\ta = input.charCodeAt(position) << 16;\n\t\t\tb = input.charCodeAt(++position) << 8;\n\t\t\tc = input.charCodeAt(++position);\n\t\t\tbuffer = a + b + c;\n\t\t\t// Turn the 24 bits into four chunks of 6 bits each, and append the\n\t\t\t// matching character for each of them to the output.\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 18 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 12 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer >> 6 & 0x3F) +\n\t\t\t\tTABLE.charAt(buffer & 0x3F)\n\t\t\t);\n\t\t}\n\n\t\tif (padding == 2) {\n\t\t\ta = input.charCodeAt(position) << 8;\n\t\t\tb = input.charCodeAt(++position);\n\t\t\tbuffer = a + b;\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 10) +\n\t\t\t\tTABLE.charAt((buffer >> 4) & 0x3F) +\n\t\t\t\tTABLE.charAt((buffer << 2) & 0x3F) +\n\t\t\t\t'='\n\t\t\t);\n\t\t} else if (padding == 1) {\n\t\t\tbuffer = input.charCodeAt(position);\n\t\t\toutput += (\n\t\t\t\tTABLE.charAt(buffer >> 2) +\n\t\t\t\tTABLE.charAt((buffer << 4) & 0x3F) +\n\t\t\t\t'=='\n\t\t\t);\n\t\t}\n\n\t\treturn output;\n\t};\n\n\tvar base64 = {\n\t\t'encode': encode,\n\t\t'decode': decode,\n\t\t'version': '0.1.0'\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn base64;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = base64;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (var key in base64) {\n\t\t\t\tbase64.hasOwnProperty(key) && (freeExports[key] = base64[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.base64 = base64;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/base-64/base64.js\n ** module id = 6\n ** module chunks = 0\n **/","module.exports = function(module) {\r\n\tif(!module.webpackPolyfill) {\r\n\t\tmodule.deprecate = function() {};\r\n\t\tmodule.paths = [];\r\n\t\t// module.parent = undefined by default\r\n\t\tmodule.children = [];\r\n\t\tmodule.webpackPolyfill = 1;\r\n\t}\r\n\treturn module;\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/buildin/module.js\n ** module id = 7\n ** module chunks = 0\n **/","/*! https://mths.be/utf8js v2.1.2 by @mathias */\n;(function(root) {\n\n\t// Detect free variables `exports`\n\tvar freeExports = typeof exports == 'object' && exports;\n\n\t// Detect free variable `module`\n\tvar freeModule = typeof module == 'object' && module &&\n\t\tmodule.exports == freeExports && module;\n\n\t// Detect free variable `global`, from Node.js or Browserified code,\n\t// and use it as `root`\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (freeGlobal.global === freeGlobal || freeGlobal.window === freeGlobal) {\n\t\troot = freeGlobal;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar stringFromCharCode = String.fromCharCode;\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2decode(string) {\n\t\tvar output = [];\n\t\tvar counter = 0;\n\t\tvar length = string.length;\n\t\tvar value;\n\t\tvar extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t// Taken from https://mths.be/punycode\n\tfunction ucs2encode(array) {\n\t\tvar length = array.length;\n\t\tvar index = -1;\n\t\tvar value;\n\t\tvar output = '';\n\t\twhile (++index < length) {\n\t\t\tvalue = array[index];\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t}\n\t\treturn output;\n\t}\n\n\tfunction checkScalarValue(codePoint) {\n\t\tif (codePoint >= 0xD800 && codePoint <= 0xDFFF) {\n\t\t\tthrow Error(\n\t\t\t\t'Lone surrogate U+' + codePoint.toString(16).toUpperCase() +\n\t\t\t\t' is not a scalar value'\n\t\t\t);\n\t\t}\n\t}\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction createByte(codePoint, shift) {\n\t\treturn stringFromCharCode(((codePoint >> shift) & 0x3F) | 0x80);\n\t}\n\n\tfunction encodeCodePoint(codePoint) {\n\t\tif ((codePoint & 0xFFFFFF80) == 0) { // 1-byte sequence\n\t\t\treturn stringFromCharCode(codePoint);\n\t\t}\n\t\tvar symbol = '';\n\t\tif ((codePoint & 0xFFFFF800) == 0) { // 2-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 6) & 0x1F) | 0xC0);\n\t\t}\n\t\telse if ((codePoint & 0xFFFF0000) == 0) { // 3-byte sequence\n\t\t\tcheckScalarValue(codePoint);\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 12) & 0x0F) | 0xE0);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\telse if ((codePoint & 0xFFE00000) == 0) { // 4-byte sequence\n\t\t\tsymbol = stringFromCharCode(((codePoint >> 18) & 0x07) | 0xF0);\n\t\t\tsymbol += createByte(codePoint, 12);\n\t\t\tsymbol += createByte(codePoint, 6);\n\t\t}\n\t\tsymbol += stringFromCharCode((codePoint & 0x3F) | 0x80);\n\t\treturn symbol;\n\t}\n\n\tfunction utf8encode(string) {\n\t\tvar codePoints = ucs2decode(string);\n\t\tvar length = codePoints.length;\n\t\tvar index = -1;\n\t\tvar codePoint;\n\t\tvar byteString = '';\n\t\twhile (++index < length) {\n\t\t\tcodePoint = codePoints[index];\n\t\t\tbyteString += encodeCodePoint(codePoint);\n\t\t}\n\t\treturn byteString;\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tfunction readContinuationByte() {\n\t\tif (byteIndex >= byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tvar continuationByte = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\tif ((continuationByte & 0xC0) == 0x80) {\n\t\t\treturn continuationByte & 0x3F;\n\t\t}\n\n\t\t// If we end up here, it’s not a continuation byte\n\t\tthrow Error('Invalid continuation byte');\n\t}\n\n\tfunction decodeSymbol() {\n\t\tvar byte1;\n\t\tvar byte2;\n\t\tvar byte3;\n\t\tvar byte4;\n\t\tvar codePoint;\n\n\t\tif (byteIndex > byteCount) {\n\t\t\tthrow Error('Invalid byte index');\n\t\t}\n\n\t\tif (byteIndex == byteCount) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Read first byte\n\t\tbyte1 = byteArray[byteIndex] & 0xFF;\n\t\tbyteIndex++;\n\n\t\t// 1-byte sequence (no continuation bytes)\n\t\tif ((byte1 & 0x80) == 0) {\n\t\t\treturn byte1;\n\t\t}\n\n\t\t// 2-byte sequence\n\t\tif ((byte1 & 0xE0) == 0xC0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x1F) << 6) | byte2;\n\t\t\tif (codePoint >= 0x80) {\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 3-byte sequence (may include unpaired surrogates)\n\t\tif ((byte1 & 0xF0) == 0xE0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x0F) << 12) | (byte2 << 6) | byte3;\n\t\t\tif (codePoint >= 0x0800) {\n\t\t\t\tcheckScalarValue(codePoint);\n\t\t\t\treturn codePoint;\n\t\t\t} else {\n\t\t\t\tthrow Error('Invalid continuation byte');\n\t\t\t}\n\t\t}\n\n\t\t// 4-byte sequence\n\t\tif ((byte1 & 0xF8) == 0xF0) {\n\t\t\tbyte2 = readContinuationByte();\n\t\t\tbyte3 = readContinuationByte();\n\t\t\tbyte4 = readContinuationByte();\n\t\t\tcodePoint = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0C) |\n\t\t\t\t(byte3 << 0x06) | byte4;\n\t\t\tif (codePoint >= 0x010000 && codePoint <= 0x10FFFF) {\n\t\t\t\treturn codePoint;\n\t\t\t}\n\t\t}\n\n\t\tthrow Error('Invalid UTF-8 detected');\n\t}\n\n\tvar byteArray;\n\tvar byteCount;\n\tvar byteIndex;\n\tfunction utf8decode(byteString) {\n\t\tbyteArray = ucs2decode(byteString);\n\t\tbyteCount = byteArray.length;\n\t\tbyteIndex = 0;\n\t\tvar codePoints = [];\n\t\tvar tmp;\n\t\twhile ((tmp = decodeSymbol()) !== false) {\n\t\t\tcodePoints.push(tmp);\n\t\t}\n\t\treturn ucs2encode(codePoints);\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\tvar utf8 = {\n\t\t'version': '2.1.2',\n\t\t'encode': utf8encode,\n\t\t'decode': utf8decode\n\t};\n\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine(function() {\n\t\t\treturn utf8;\n\t\t});\n\t}\telse if (freeExports && !freeExports.nodeType) {\n\t\tif (freeModule) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = utf8;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tvar object = {};\n\t\t\tvar hasOwnProperty = object.hasOwnProperty;\n\t\t\tfor (var key in utf8) {\n\t\t\t\thasOwnProperty.call(utf8, key) && (freeExports[key] = utf8[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.utf8 = utf8;\n\t}\n\n}(this));\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/utf8/utf8.js\n ** module id = 8\n ** module chunks = 0\n **/","// @flow\n\nimport Media from './Media.js';\n\n/** Class represents user of Memex */\nexport default class User {\n\n  /** Unique user ID */\n  ID: ?number;\n  /** Creation timestamp */\n  createdAt: ?Date;\n  /** Timestamp of last update */\n  updatedAt: ?Date;\n  /** Fullname of user in format FirstName LastName */\n  fullname: ?string;\n  /** Email of user (unique) */\n  email: ?string;\n  /** Users password */\n  password: ?string;\n  /** Avatar */\n  avatar: ?Media;\n  /** MUID of users origin space (root, entry point) */\n  originSpaceMUID: ?string;\n  /** Flag that tells if user set his password or he can be only authenticated using onboarding token */\n  hasPassword: ?bool;\n  /** Flag that tells if user has enabled advanced features. This will be in future replaced with full feature flags set. */\n  advanced: ?bool;\n\n  constructor() {\n  }\n\n  fromJSON(json: Object) {\n    this.ID = json.id;\n    if (json.created_at != null) {\n      this.createdAt = new Date(json.created_at);\n    }\n    if (json.updated_at != null) {\n      this.updatedAt = new Date(json.updated_at);\n    }\n    this.fullname = json.fullname;\n    this.email = json.email;\n    this.password = json.password;\n    this.avatar = json.avatar;\n    this.originSpaceMUID = json.origin_space_muid;\n    this.hasPassword = json.has_password;\n    this.advanced = json.advanced;\n  }\n\n  toJSON(): Object {\n    let json: any = {};\n    if (this.createdAt != null) {\n      json.created_at = this.createdAt.toISOString();\n    }\n    if (this.updatedAt != null) {\n      json.updated_at = this.updatedAt.toISOString();\n    }\n    json.fullname = this.fullname;\n    json.email = this.email;\n    json.password = this.password;\n    json.avatar = this.avatar;\n    json.origin_space_muid = this.originSpaceMUID;\n    json.has_password = this.hasPassword;\n    json.advanced = this.advanced;\n    if (this.avatar != null) {\n      json.avatar_muid = this.avatar.MUID;\n    }\n    return json;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data/User.js\n **/","// @flow\n\nimport Media from './Media.js';\nimport type { MediaType } from './Media.js';\nimport type { EntityState } from './Types.js';\nimport { entityStates } from './Types.js';\n\n/** Defines known space types */\nexport type SpaceType = string;\nexport const spaceTypes = {\n  /** Origin is simillar to collection but defines entry point into users spaces (root) */\n  origin: 'com.memex.origin',\n  /** Collection of links to spaces */\n  collection: 'com.memex.media.collection',\n  /** Space that represents web link */\n  webPage: 'com.memex.media.webpage',\n  /** Graphical kind of space */\n  image: 'com.memex.media.image',\n  /** Textual kind of space */\n  text: 'com.memex.media.text'\n};\n\n/** Defines space processing modes */\nexport type SpaceProcessingMode = string;\nexport const spaceProcessingModes = {\n  /** Don't process */\n  no: 'no',\n  /** Wait for results */\n  sync: 'sync',\n  /** Dont wait for results */\n  async: 'async',\n};\n\n/** Class represents space (abstraction for linked spaces) */\nexport default class Space {\n\n  /** Unique identifier */\n  MUID: ?string;\n  /** Creation timestamp */\n  createdAt: ?Date;\n  /** Timestamp of last update */\n  updatedAt: ?Date;\n  /** Timestamp of last visit */\n  visitedAt: ?Date;\n  /** Visibility state */\n  state: EntityState;\n  /** Owner user ID */\n  ownerID: ?number;\n  /** Type (eg. com.memex.media.collection, etc.) */\n  spaceType: SpaceType;\n  /** Caption */\n  caption: ?string;\n  /** Tint color */\n  color: ?string;\n  /** Set of media that represents space (eg webpage space is represented by url, thumbnail, summary) */\n  representations: ?Array<Media>;\n  /** Unread flag (if user needs to be notified about changes)*/\n  unread: bool;\n\n  constructor() {\n    this.state = entityStates.visible;\n    this.spaceType = spaceTypes.collection;\n    this.representations = [];\n    this.unread = false;\n  }\n\n  /**\n   * Returns visible representation of specified type\n   *\n   * @param MediaType mediaType: Type of media/representation\n   * @returns Media: Returns found media (null if not found)\n   */\n  getRepresentation(mediaType: MediaType): ?Media {\n    if (this.representations == null) {\n      return null;\n    }\n    for (let media of this.representations) {\n      if (media.mediaType === mediaType && media.state === entityStates.visible) {\n        return media;\n      }\n    }\n    return null;\n  }\n\n  fromJSON(json: Object) {\n    this.MUID = json.muid;\n    if (json.created_at != null) {\n      this.createdAt = new Date(json.created_at);\n    }\n    if (json.updated_at != null) {\n      this.updatedAt = new Date(json.updated_at);\n    }\n    if (json.visited_at != null) {\n      this.visitedAt = new Date(json.visited_at);\n    }\n    this.state = json.state;\n    this.ownerID = json.owner_id;\n    this.spaceType = json.type_identifier;\n    this.caption = json.tag_label;\n    this.color = json.tag_color;\n    if (json.representations != null) {\n      this.representations = json.representations.map(function(json: Object): Media {\n        let media = new Media();\n        media.fromJSON(json);\n        return media;\n      });\n    } else {\n      this.representations = null;\n    }\n    this.unread = json.unread || false;\n  }\n\n  toJSON(): Object {\n    let json: any = {};\n    json.muid = this.MUID;\n    if (this.createdAt != null) {\n      json.created_at = this.createdAt.toISOString();\n    }\n    if (this.updatedAt != null) {\n      json.updated_at = this.updatedAt.toISOString();\n    }\n    if (this.visitedAt != null) {\n      json.visited_at = this.visitedAt.toISOString();\n    }\n    json.state =  this.state;\n    json.owner_id = this.ownerID;\n    json.type_identifier = this.spaceType;\n    json.tag_label = this.caption;\n    json.tag_color = this.color;\n    if (this.representations != null) {\n      json.representations = this.representations.map(function(media: Media): Object {\n        return media.toJSON();\n      });\n    }\n    json.unread = this.unread;\n    return json;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data/Space.js\n **/","// @flow\n\nimport Media from './Media.js';\nimport type { MediaType } from './Media.js';\nimport type { EntityState } from './Types.js';\nimport { entityStates } from './Types.js';\n\n/** Class represents space visit */\nexport default class SpaceVisit {\n\n  /** Unique identifier */\n  MUID: ?string;\n  /** Timestamp of last visit */\n  visitedAt: ?Date;\n\n  constructor() {\n  }\n\n  toJSON(): Object {\n    let json: any = {};\n    json.muid = this.MUID;\n    if (this.visitedAt != null) {\n      json.visited_at = this.visitedAt.toISOString();\n    }\n    return json;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data/SpaceVisit.js\n **/","// @flow\n\nimport type { EntityState } from './Types.js';\nimport { entityStates } from './Types.js';\nimport Space from './Space.js';\n\n/** Class represents link between two spaces. */\nexport default class Link {\n\n  /** Unique identifier */\n  MUID: ?string;\n  /** Creation timestamp */\n  createdAt: ?Date;\n  /** Timestamp of last update */\n  updatedAt: ?Date;\n  /** Visibility state */\n  state: EntityState;\n  /** Owner user ID */\n  ownerID: ?number;\n  /** Index that is used for sorting of links in space */\n  order: ?number;\n  /** Origin space */\n  origin: Space;\n  /** Target space */\n  target: Space;\n\n  constructor() {\n    this.state = entityStates.visible;\n  }\n\n  fromJSON(json: Object) {\n    this.MUID = json.muid;\n    if (json.created_at != null) {\n      this.createdAt = new Date(json.created_at);\n    }\n    if (json.updated_at != null) {\n      this.updatedAt = new Date(json.updated_at);\n    }\n    this.state = json.state;\n    this.ownerID = json.owner_id;\n    this.order = json.order;\n    if (json.origin_space_muid != null) {\n      this.origin = new Space();\n      this.origin.MUID = json.origin_space_muid;\n    }\n    if (json.target_space_muid != null) {\n      this.target = new Space();\n      this.target.MUID = json.target_space_muid;\n    }\n    if (json.target_space != null) {\n      this.target = new Space();\n      this.target.fromJSON(json.target_space);\n    }\n  }\n\n  toJSON(): Object {\n    let json: any = {};\n    json.muid = this.MUID;\n    if (this.createdAt != null) {\n      json.created_at = this.createdAt.toISOString();\n    }\n    if (this.updatedAt != null) {\n      json.updated_at = this.updatedAt.toISOString();\n    }\n    json.state = this.state;\n    json.owner_id = this.ownerID;\n    json.order = this.order;\n    if (this.target != null) {\n      json.target_space_muid = this.target.MUID;\n    }\n    if (this.origin != null) {\n      json.target_space_muid = this.origin.MUID;\n    }\n    return json;\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data/Link.js\n **/","// @flow\n\n/** Approval state of app  */\nexport type AppState = number;\nexport const appStates = {\n  /** App is new and review wasn't requested yet */\n  new: 0,\n  /** Appr review is requested */\n  requested: 1,\n  /** App was approved and will get higher limits */\n  approved: 2,\n  /** App was rejected by reviewer */\n  rejected: 3,\n  /** App was blocked by admin */\n  blocked: 4\n};\n\n/** Platform/language of SDK */\nexport type AppPlatform = number;\nexport const appPlatforms = {\n  /** Native REST API */\n  rest: 0,\n  /** Swift */\n  swift: 1,\n  /** JavaScript */\n  javaScript: 2,\n  /** Go */\n  golang: 3\n};\n\n/** Class representing app. */\nexport default class App {\n\n  /** Unique identifier */\n  id: number;\n  /** Name of app */\n  name: ?string;\n  /** Secription of app (is used in review process) */\n  description: ?string;\n  /** Developer contact email */\n  email: ?string;\n  /** App product page */\n  webpage: ?string;\n  /** App token (is sent with every request in X-App-Token HTTP header) */\n  token: ?string;\n  /** Approval state of the app */\n  state: ?AppState;\n  /** Default plaform for the app. App can be used from any other platform. This value is used only for suggestion of SDK. */\n  platform: ?AppPlatform;\n\n  constructor() {\n  }\n\n  fromJSON(json: Object) {\n    this.id = json.id;\n    this.name = json.name;\n    this.description = json.description;\n    this.email = json.email;\n    this.webpage = json.webpage;\n    this.token = json.token;\n    this.state = json.state;\n    this.platform = json.platform;\n  }\n\n  toJSON(): Object {\n    return {\n      name: this.name,\n      description: this.description,\n      email: this.email,\n      webpage: this.webpage,\n      platform: this.platform,\n    };\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/data/App.js\n **/"],"sourceRoot":""}